{"version":3,"sources":["fbase.ts","styles/layout.ts","routes/styles/style.ts","components/Modal/styles.ts","assets/AnswerNext.svg","assets/CloseButton.svg","components/Modal/LetterModal.tsx","assets/Post.svg","assets/OKButton.svg","routes/Home.tsx","routes/Profile.tsx","routes/styles/buttonstyle.ts","routes/Write.tsx","assets/Letter.svg","routes/WriteSuccess.tsx","assets/Google.svg","assets/Github.svg","routes/Auth.tsx","routes/Signup.tsx","assets/PostByStart.svg","routes/Start.tsx","components/Button.tsx","assets/Chip.svg","components/AnswerSelect.tsx","assets/Rank1.svg","assets/Rank2.svg","assets/Rank3.svg","components/AnswerRank.tsx","assets/AnswerBack.svg","components/AnswerSentence.tsx","assets/BlackHeart.svg","assets/PinkHeart.svg","components/AnswerScore.tsx","routes/Question.tsx","components/Modal/Modal.tsx","routes/Post.tsx","routes/DevTool.tsx","routes/Loading.tsx","assets/Profile.svg","assets/Back.svg","assets/Line.svg","assets/AnswerImg.svg","assets/TImg.svg","assets/ShareIcon.svg","assets/Home.svg","assets/Action.svg","routes/Result.tsx","components/App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","MediaDiv","styled","div","GlobalStyle","createGlobalStyle","reset","Container","TitleDiv","InputStyle","input","WriteTitleDiv","LetterStyle","img","WriteSubTitle","Background","Modal","closeModal","outside","children","useRef","divRef","React","history","useNavigate","ref","onClick","e","target","current","ModalWrapper","StampLayout","src","CloseButton","ModalImg","answerImg","textarea","Home","userObj","useState","isModalOpen","setModalOpen","PostImg","Post","Text","SubText","OKButtonImg","LetterModal","prev","OKButton","Profile","signOut","RedButton","button","WhiteButton","Write","nweet","setNweet","attachment","setAttachment","value","setValue","useEffect","style","height","scrollHeight","onSubmit","event","preventDefault","attachmentUrl","attRef","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","text","createdAt","Date","now","creatorId","LetterDiv","Textarea","onChange","v","placeholder","maxLength","Input","type","disabled","FileInput","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","width","WriteSuccess","Letter","WriteSuccessTitle","ButtonLayout","Auth","navi","onSocialClick","alt","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","ButtonStyle","Google","Github","Signup","InputLayout2","Start","HotelImg","PostByStart","ButtonWrapper","Button","label","setNext","AnswerSelectWrapper","Chips","ChipWrapper","ChipsInput","AnswerSelect","setAnswerData","ChipImg","color","AnswerRankWrapper","RankImg","RankWrapper","RankInput","AnswerRank","rank","setAnswer","className","rank2","name","rankImg2","rank1","rankImg1","rank3","rankImg3","AnswerSentenceWrapper","AnswerImg","SentenceInput","AnswerSentence","answer","data","AnswerScoreWrapper","HeartImg","Wrapper","HeartText","HeartItem","AnswerScore","heartList","idx","is_checked","AnswerSelected","heart","setHeart","answerText","setAnswerText","map","item","PinkHeart","BlackHeart","filter","i","count","setFillHeart","Question","id","useParams","curQuiz","setQuiz","questionList","setQuizz","setIdx","onSnapshot","snapshot","questionList1","docs","document","question","answer_type","questionIdx","num","parseInt","length","BackgroundImg","letter","QuestionSub","QuestionTitle","LetterImg","onClickOpenModal","setNweets","newArray","ImagesDiv","image","key","Btn","Image","DevTool","goalCount","setGoalCount","windowCount","setWindowCount","windowInfoIndex","setWindowInfoIndex","isAdmin","onChangeWindowInfoIndex","onSubmitWindowInfo","doc","update","alert","onSubmitWindowClose","onSubmitWindowCount","addQuestionList","email","setEmail","password1","setPassword1","password2","setPassword2","onChangeEmailAndPassword","onSubmitSignUpTest","createUserWithEmailAndPassword","HotelGuide","marginTop","fontSize","fontFamily","fontWeight","NicknameInput","InputStylenick","required","form","Img","Sub","Loading","setTimeout","HeartWrapper","ContentWrapper","back","Answer","LineImg","AnswerWrapper","Ranking","ShareText","ShareIconImg","Header","Result","HomeIcon","Share2Icon","ProfileImg","Line","TImg","ShareIcon","App","setIsLoggedIn","setInit","setUserObj","onAuthStateChanged","user","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAeAA,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKV,I,0OAAMC,GAAmBT,IACnBU,GAAcV,IAASW,OACvBC,GAAYZ,IAASa,YACrBC,GAAiBd,IAASe,U,yBCjB1BC,GAAWC,KAAOC,IAAG,6QAarBC,GAAcC,aAAiB,idAOtCC,M,iBCrBOC,GAAYL,KAAOC,IAAG,uHAOtBK,GAAWN,KAAOC,IAAG,mNAYrBM,GAAaP,KAAOQ,MAAK,seA0BzBC,GAAgBT,KAAOC,IAAG,uKAU1BS,GAAcV,KAAOW,IAAG,kGAKxBC,GAAgBZ,KAAOC,IAAG,6HC3C1BY,IDoDeb,KAAOC,IAAG,sJCnEND,KAAOC,IAAG,yRAehBD,KAAOC,IAAG,4JCnBrB,OAA0B,uCCA1B,OAA0B,wC,QCkD1Ba,GAvBD,SAAH,GAAuC,IAAjCC,EAAU,EAAVA,WACTC,GAD6B,EAARC,SACNC,oBACfC,EAASC,IAAMF,OAA8B,MAE7CG,EAAUC,eAKhB,OACE,eAACT,GAAU,CACXU,IAAKJ,EACLK,QAAU,SAACC,GAAWA,EAAEC,QAAUV,EAAQW,SAASZ,GAAW,IAAU,SAGxE,gBAACa,GAAY,WACb,eAACC,GAAW,CAACC,IAAKC,GAAaP,QAAST,IACtC,eAACiB,GAAQ,CAACR,QAZC,WACbH,EAAQ,gBAWqBS,IAAKG,WAQhCL,GAAe5B,KAAOC,IAAG,yIAQzB+B,GAAWhC,KAAOW,IAAG,6CAoBrBkB,IAhBgB7B,KAAOkC,SAAQ,sMAgBjBlC,KAAOW,IAAG,yHChFf,OAA0B,iCCA1B,OAA0B,qCCiE1BwB,GAlDF,SAAH,GAAa,EAAPC,QAAoB,IAClC,EAA0BC,mBAAS,IAAG,mBACtC,GADY,KAAU,KACcA,mBAAS,KAAG,mBAUhD,GAViB,KAAe,KAEhBf,eAQoBe,oBAAS,IAAM,mBAA5CC,EAAW,KAAEC,EAAY,KAShC,OACE,uCACE,gBAAClC,GAAS,WACR,eAACC,GAAQ,2BACT,eAACkC,GAAO,CAACV,IAAKW,KACd,gBAACC,GAAI,0DACM,wBACT,yCAAS,+DAEX,eAACC,GAAO,oFACR,eAAC,GAAQ,CAACb,IAAKc,GAAapB,QAjBT,WACvBe,GAAa,MAiBRD,GACC,eAACO,GAAW,CAAC9B,WAhBK,WACxBwB,GAAa,SAACO,GAAI,OAAMA,QAgBjB,OAWQ,QAObC,GAAW/C,KAAOW,IAAG,mFAWrB6B,IANYxC,KAAOW,IAAG,mFAMZX,KAAOW,IAAG,sFAOpB+B,GAAO1C,KAAOC,IAAG,iIAUjB0C,GAAU3C,KAAOC,IAAG,yFC9EX+C,GAbC,WACd,IAIM3B,EAAUC,eAChB,OACE,qCACE,yBAAQE,QAPU,WACpB/B,GAAYwD,UACZ5B,EAAQ,MAKyB,wB,qCCVxB6B,GAAYlD,KAAOmD,OAAM,0iBA0BzBC,GAAcpD,KAAOmD,OAAM,4aCkGzBE,GA/GD,SAAH,GAA0B,IAApBjB,EAAO,EAAPA,QACf,EAA0BC,mBAAS,IAAG,mBAA/BiB,EAAK,KAAEC,EAAQ,KACtB,EAA4BlB,mBAAS,IAAG,mBACxC,GADa,KAAW,KACYA,mBAAS,KAAG,mBAAzCmB,EAAU,KAAEC,EAAa,KAEhC,EAA0BpB,mBAAS,IAAG,mBAA/BqB,EAAK,KAAEC,EAAQ,KAChBpC,EAAWL,mBAEjB0C,qBAAU,WAERrC,EAAII,QAAQkC,MAAMC,OAAS,MAC3B,IAAMC,EAAexC,EAAII,QAAQoC,aACjCxC,EAAII,QAAQkC,MAAMC,OAASC,EAAe,OACzC,CAACL,IAEJ,IAAMM,EAAQ,yCAAG,WAAOC,GAAU,4EAET,GADvBA,EAAMC,iBACFC,EAAgB,GACD,KAAfX,EAAiB,iBAEoD,OAAjEY,EAASvE,GAAe0B,MAAM8C,MAAM,GAAD,OAAIjC,EAAQkC,IAAG,YAAIC,iBAAY,EAAD,OAChDH,EAAOI,UAAUhB,EAAY,YAAY,KAAD,EAAjD,OAARiB,EAAQ,gBACQA,EAASlD,IAAImD,iBAAiB,KAAD,EAAnDP,EAAa,gCAGTxE,GAAUgF,WAAW,UAAUC,IAAI,CACvCC,KAAMvB,EACNwB,UAAWC,KAAKC,MAChBC,UAAW7C,EAAQkC,IACnBH,kBACC,KAAD,GAEFZ,EAAS,IACTE,EAAc,IAAI,4CACnB,gBAnBa,sCAmDRpC,EAAUC,eAKhB,OACE,qCACE,gBAACjB,GAAS,WACR,eAAC6E,GAAS,2BACV,wBACA,gBAACzE,GAAa,gCAEZ,wBAAM,+BAGR,eAAC0E,GAAQ,CACP5D,IAAKA,EACLmC,MAAOJ,EACP8B,SAhDS,SAACnB,GAChBA,EAAMC,iBACN,IACYR,EACRO,EADFvC,OAAUgC,MAEZH,EAASG,GAET,IAAM2B,EAAIpB,EAAMvC,OAAOgC,MACvBC,EAAS0B,IAyCHC,YAAY,mCACZC,UAAW,MAEb,eAACC,GAAK,CAACC,KAAK,OAAOH,YAAY,oFAC/B,uBAAMtB,SAAUA,EAAS,SACvB,eAACd,GAAS,CACRuC,KAAK,SACLC,UAAU,EACVlE,QA1BkB,WAC1BH,EAAQ,kBA0BAqC,MAAM,KAAI,kCAKd,eAACiC,GAAS,CAACF,KAAK,OAAOG,OAAO,UAAUR,SApDzB,SAACnB,GACpB,IAGM4B,EADF5B,EADFvC,OAAUoE,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACVD,EADPE,cAAiBD,OAEnB1C,EAAc0C,IAEhBJ,EAAOM,cAAcR,MAyChBrC,GACC,iCACE,sBAAK1B,IAAK0B,EAAY8C,MAAM,OAAOxC,OAAO,SAC1C,yBAAQtC,QAzCQ,WAAH,OAASiC,EAAc,KAyCD,sBAEpC,UAQL0B,GAAWnF,KAAOkC,SAAQ,keA4B1BsD,GAAQxF,KAAOQ,MAAK,8aA2BpBmF,GAAY3F,KAAOQ,MAAK,kDAIxB0E,GAAYlF,KAAOC,IAAG,iDC3Lb,OAA0B,mCCsB1BsG,GAhBM,WACnB,OACE,gBAAC,GAAS,WACR,eAAC7F,GAAW,CAACoB,IAAK0E,KAClB,eAACC,GAAiB,2DAClB,eAAC7F,GAAa,yEACd,eAACA,GAAa,2DACd,eAACA,GAAa,kGACd,gBAAC,GAAY,WACX,eAACsC,GAAS,qDACV,eAACE,GAAW,wCAQdqD,GAAoBzG,KAAOC,IAAG,sFAK9ByG,GAAe1G,KAAOC,IAAG,sIAQzBI,GAAYL,KAAOC,IAAG,wHCrCb,OAA0B,mCCA1B,OAA0B,mCCsC1B0G,GA/BF,WACX,IAAMC,EAAOtF,eAEPuF,EAAa,yCAAG,WAAO5C,GAAU,0EASpC,MAJW,YAHA6C,EACR7C,EADFvC,OAAUoF,KAIVC,EAAW,IAAIvH,GAAiBE,KAAKsH,mBACpB,WAARF,IACTC,EAAW,IAAIvH,GAAiBE,KAAKuH,oBACtC,SAEkBxH,GAAYyH,gBAAgBH,GAAU,KAAD,EAA9C,OAEVH,EAAK,SACL,2CACD,gBAfkB,sCAiBnB,OACE,eAACvG,GAAS,UACR,gBAAC8G,GAAW,WACV,sBAAKrF,IAAKsF,GAAQ5F,QAASqF,EAAeC,IAAI,WAC9C,sBAAKhF,IAAKuF,GAAQ7F,QAASqF,EAAeC,IAAI,iBAShDK,GAAcnH,KAAOC,IAAG,6GCffqH,GAnBA,WACb,OACE,qCACE,gBAACjH,GAAS,WACR,eAACC,GAAQ,8CACT,gBAACiH,GAAY,WACX,eAAChH,GAAU,CAAC+E,YAAY,uBACxB,eAAC/E,GAAU,CAAC+E,YAAY,uBACxB,eAAC/E,GAAU,CAAC+E,YAAY,6BACxB,eAAC/E,GAAU,CAAC+E,YAAY,6CAE1B,eAACpC,GAAS,CAACwC,UAAU,EAAMD,KAAK,SAAQ,0DAU1C8B,GAAevH,KAAOC,IAAG,oIC3BhB,OAA0B,wCC6B1BuH,GAtBD,WACIlG,eAMhB,OACE,qCACE,gBAACjB,GAAS,WACR,eAACoH,GAAQ,CAAC3F,IAAK4F,KACf,gBAAC,GAAI,0DACM,wBACT,yCAAS,+DAEX,eAAC,GAAO,oFACR,eAAC,GAAI,UAQPhF,GAAO1C,KAAOC,IAAG,iIASjBwH,GAAWzH,KAAOW,IAAG,qFAMrBgC,GAAU3C,KAAOC,IAAG,yFCrCpB0H,GAAgB3H,KAAOC,IAAG,yIAQjB2H,GAfA,SAAH,GAAiC,IAA3BC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAIvB,OAAO,eAACH,GAAa,CAACnG,QAHN,WACdsG,KAEqC,SAAED,KCN5B,OAA0B,iCCuBnCE,GAAsB/H,KAAOC,IAAG,8LAUhC+H,GAAQhI,KAAOW,IAAG,2BAElBsH,GAAcjI,KAAOC,IAAG,oDAIxBiI,GAAalI,KAAOQ,MAAK,+RAoBhB2H,GAzDM,SAAH,GAAmB,EAAbC,cACtB,OACE,gBAACL,GAAmB,WAClB,gBAACE,GAAW,WACV,eAACD,GAAK,CAAClG,IAAKuG,GAASC,MAAM,QAC3B,eAACJ,GAAU,CAAC5C,YAAY,WAG1B,gBAAC2C,GAAW,WACV,eAACD,GAAK,CAAClG,IAAKuG,GAASC,MAAM,QAC3B,eAACJ,GAAU,CAAC5C,YAAY,WAG1B,gBAAC2C,GAAW,WACV,eAACD,GAAK,CAAClG,IAAKuG,GAASC,MAAM,QAC3B,eAACJ,GAAU,CAAC5C,YAAY,e,SCjBjB,OAA0B,kCCA1B,OAA0B,kCCA1B,OAA0B,kCCwCnCiD,GAAoBvI,KAAOC,IAAG,sHAO9BuI,GAAUxI,KAAOW,IAAG,8CAIpB8H,GAAczI,KAAOC,IAAG,wLAcxByI,GAAY1I,KAAOQ,MAAK,mMAefmI,GA1EI,SAAH,GAAgC,IAA1BP,EAAa,EAAbA,cACpB,EAA0B/F,mBAAS,IAAG,mBAA/BuG,EAAI,KAAEC,EAAS,KAGtB,OAFAT,EAAcQ,GAGZ,gBAACL,GAAiB,WAChB,gBAACE,GAAW,CAACK,UAAU,QAAO,UAC5B,eAACJ,GAAS,CACRtD,SAAU,SAAC3D,GAAC,OAAKoH,EAAU,6BAAKD,GAAI,IAAEG,MAAOtH,EAAEC,OAAOgC,UACtDsF,KAAK,QACL1D,YAAY,oCAEd,eAACkD,GAAO,CAAC1G,IAAKmH,QAGhB,gBAACR,GAAW,WACV,eAACC,GAAS,CACRtD,SAAU,SAAC3D,GAAC,OAAKoH,EAAU,6BAAKD,GAAI,IAAEM,MAAOzH,EAAEC,OAAOgC,UACtD4B,YAAY,oCAEd,eAACkD,GAAO,CAAC1G,IAAKqH,QAGhB,gBAACV,GAAW,CAACK,UAAU,QAAO,UAC5B,eAACJ,GAAS,CACRtD,SAAU,SAAC3D,GAAC,OAAKoH,EAAU,6BAAKD,GAAI,IAAEQ,MAAO3H,EAAEC,OAAOgC,UACtD4B,YAAY,oCAEd,eAACkD,GAAO,CAAC1G,IAAKuH,GAAUP,UAAU,iBClC3B,OAA0B,uCCsBnCQ,GAAwBtJ,KAAOC,IAAG,wIAQlCsJ,GAAYvJ,KAAOW,IAAG,6CAItB6I,GAAgBxJ,KAAOkC,SAAQ,wMAetBuH,GA1CQ,SAAH,GAAgC,IAA1BrB,EAAa,EAAbA,cACxB,EAA4B/F,mBAAS,IAAG,mBAAjCqH,EAAM,KAAEb,EAAS,KAGxB,OAFAT,EAAcsB,GAGZ,gBAACJ,GAAqB,WACpB,eAACC,GAAS,CAACzH,IAAKG,KAChB,eAAC,GAAa,CACZmD,SAAU,SAAC3D,GAAM,OAAKoH,EAAU,6BAAKa,GAAM,IAAEC,KAAMlI,EAAEC,OAAOgC,UAC5D4B,YAAY,gEChBL,OAA0B,uCCA1B,OAA0B,sCCkFnCsE,GAAqB5J,KAAOC,IAAG,2KAS/B4J,GAAW7J,KAAOW,IAAG,+CAIrBmJ,GAAU9J,KAAOC,IAAG,yEAKpB8J,GAAY/J,KAAOC,IAAG,wEAKtB+J,GAAYhK,KAAOC,IAAG,iIAQbgK,GA5GK,SAAH,GAAmB,EAAb7B,cAA0B,IAC3C8B,EAAiB,CACnB,CACEC,IAAK,EACLC,YAAY,EACZvF,KAAM,+CAER,CACEsF,IAAK,EACLC,YAAY,EACZvF,KAAM,uEAER,CACEsF,IAAK,EACLC,YAAY,EACZvF,KAAM,gFAER,CACEsF,IAAK,EACLC,YAAY,EACZvF,KAAM,0EAER,CACEsF,IAAK,EACLC,YAAY,EACZvF,KAAM,qGAIJwF,EAAiB,CACrB,8CACA,sEACA,+EACA,yEACA,oGAGF,EAA0BhI,mBAAS,IAAG,mBAA/BiI,EAAK,KAAEC,EAAQ,KACtB,EAAoClI,mBAASgI,EAAe,IAAG,mBAAxDG,EAAU,KAAEC,EAAa,KAEhC7G,qBAAU,WACR2G,EAASL,KACR,IAkBH,OACE,gBAACN,GAAkB,WACjB,eAACE,GAAO,UACLQ,EAAMI,KAAI,SAACC,GAAS,OACnB,eAACX,GAAS,UACR,eAACH,GAAQ,CACP/H,IAAK6I,EAAKP,WAAaQ,GAAYC,GACnCrJ,QAAS,kBAvBA,SAACmJ,GACpBT,EAAUY,QAAO,SAACH,GAAS,OAAMA,EAAKP,YAAa,KAEnD,IAAK,IAAIW,EAAI,EAAGA,EAAIJ,EAAKR,IAAKY,IAC5Bb,EAAUa,GAAGX,YAAa,EAC1BG,EAASL,GAEX,IAAIc,EAAQ,EACZd,EAAUY,QAAO,SAACH,GACZA,EAAKP,YACPY,OAGJP,EAAcJ,EAAeW,EAAQ,IAUZC,CAAaN,aAKpC,eAACZ,GAAS,UAAES,QCkBHU,GA5EE,SAAH,GAAa,EAAP9I,QAAoB,IAC9B+I,EAAYC,eAAZD,GACR,EAA2B9I,qBAAkB,mBAAtCgJ,EAAO,KAAEC,EAAO,KACvB,EAAsCjJ,qBAAU,mBAAzCkJ,EAAY,KAAEC,EAAQ,KAC7B,EAAiCnJ,mBAAS,IAAG,mBAA9BwG,GAAF,KAAW,MACxB,EAAsBxG,mBAAS,GAAE,mBAA1B8H,EAAG,KAAEsB,EAAM,KACZpK,EAAUC,eAEhBsC,qBAAU,WACRjE,GAAUgF,WAAW,gBAAgB+G,YAAW,SAACC,GAC/C,IAAMC,EAAqBD,EAASE,KAAKnB,KAAI,SAACoB,GAAQ,MAAM,CAC1DC,SAAUD,EAASnC,OAAOoC,SAC1BC,YAAaF,EAASnC,OAAOqC,YAC7BC,YAAaH,EAASnC,OAAOsC,gBAE/BT,EAASI,MAGX,IAAMM,EAAMC,SAAShB,GACjBI,IACFD,EAAQC,EAAaW,EAAM,IAC3BT,EAAOS,IAGLA,EAAM,KAAkB,OAAZX,QAAY,IAAZA,OAAY,EAAZA,EAAca,SAC5B/K,EAAQ,cAGT,CAAC8J,IAEJ,IAeM/C,EAAgB,SAACuB,GACrBd,EAAUc,IAGZ,OACE,qCACE,gBAAC0C,GAAa,WACZ,iCACE,eAAC,GAAS,CAACvK,IAAKwK,KAChB,eAACC,GAAW,+CACZ,eAACC,GAAa,WACJ,OAAPnB,QAAO,IAAPA,OAAO,EAAPA,EAASU,UAAkB,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASU,SAAW,iDAE1CV,GAAoC,UAAlB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASW,aACnB,eAAC,GAAU,CAAC5D,cAAeA,IACA,cAAlB,OAAPiD,QAAO,IAAPA,OAAO,EAAPA,EAASW,aACX,eAAC,GAAc,CAAC5D,cAAeA,IACJ,UAAlB,OAAPiD,QAAO,IAAPA,OAAO,EAAPA,EAASW,aACX,eAAC,GAAY,IAEb,eAAC,GAAW,OAIhB,eAAC,GAAM,CAACnE,MAAO,eAAMC,QAvCX,WACd2D,EAAOtB,EAAM,GACb9I,EAAQ,aAAe8I,YA8CrBsC,GAAYzM,KAAOW,IAAG,+CAItB0L,GAAgBrM,KAAOC,IAAG,6LAU1BuM,GAAgBxM,KAAOC,IAAG,oHAO1BsM,GAAcvM,KAAOC,IAAG,2FC7Efa,GAhBD,SAAH,GAAuC,IAAjCC,EAAU,EAAVA,WACTC,GAD6B,EAARC,SACNC,oBACfC,EAASC,IAAMF,OAA8B,MACnD,OACE,eAACL,GAAU,CACTU,IAAKJ,EACLK,QAAU,SAACC,GAAWA,EAAEC,QAAUV,EAAQW,SAASZ,GAAW,IAAU,SAE1E,gBAAC,GAAY,WACX,eAAC,GAAQ,CAACe,IAAKG,KACf,eAAC,GAAa,CAACqD,YAAY,kEAO3B1D,GAAe5B,KAAOC,IAAG,0IAQzB+B,GAAWhC,KAAOW,IAAG,+CAIrB6I,GAAgBxJ,KAAOkC,SAAQ,wMC4KtBO,ID7JSzC,KAAOC,IAAG,6HCpDrB,SAAH,GAAa,EAAPmC,QAAoB,IA2KlC,EAAoCC,oBAAS,GAAM,mBAA5CC,EAAW,KAAEC,EAAY,KAE1BmK,EAAmB,WACvBnK,GAAa,IAMf,EAA4BF,mBAAS,IAAG,mBAAzBsK,GAAF,KAAW,MAYxB,OAVA/I,qBAAU,WACRjE,GAAUgF,WAAW,UAAU+G,YAAW,SAACC,GACzC,IAAMiB,EAAgBjB,EAASE,KAAKnB,KAAI,SAACoB,GAAQ,qBAC/CX,GAAIW,EAASX,IACVW,EAASnC,WAEdgD,EAAUC,QAEX,IAGD,uCACE,eAACC,GAAS,UAjMkB,CAC9B,CACE1B,GAAI,EACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,QACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,WACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,UACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,EACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,QACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,WACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,UACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,UACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,SACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,QACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,WACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,UACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,OACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,UACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,QACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,WACN8D,MACE,4KAEJ,CACE3B,GAAI,GACJnC,KAAM,OACN8D,MACE,6KA2BQpC,KAAI,SAACC,EAAMoC,GAAG,OAClB,eAACC,GAAG,CAACxL,QAASkL,EAAiB,SAC7B,eAACO,GAAK,CAACnL,IAAK6I,EAAKmC,MAAOhG,IAAK6D,EAAK3B,cAK1C,yBAAQxH,QAASkL,EAAiB,mDAC/BpK,GACC,eAAC,GAAK,CAACvB,WA5BW,WACxBwB,GAAa,SAACO,GAAI,OAAMA,QA4BjB,SAMLmK,GAAQjN,KAAOW,IAAG,+DAIlBkM,GAAY7M,KAAOC,IAAG,mDAGtB+M,GAAMhN,KAAOmD,OAAM,wN,SCkIV+J,GApWC,SAAH,GAAa,EAAP9K,QAAoB,IAG7B+I,EAAOC,eAAPD,GAER,EAAkC9I,mBAAS,GAAE,mBAAtC8K,EAAS,KAAEC,EAAY,KAC9B,EAAsC/K,mBAAS,GAAE,mBAA1CgL,EAAW,KAAEC,EAAc,KAClC,EAA8CjL,mBAAS,GAAE,mBAAlDkL,EAAe,KAAEC,EAAkB,KAE1C,EAA8BnL,oBAAS,GAAM,mBAAtCoL,EAAO,KAAY,KAE1B7J,qBAAU,cAQP,IAEH,IAAM8J,EAA0B,SAACzJ,GAC/B,IACYP,EACRO,EADFvC,OAAUgC,MAEZ8J,EAAmB9J,IAefiK,EAAkB,yCAAG,WAAO1J,GAAU,kEAK1C,OAJAA,EAAMC,iBAIN,SAEMvE,GACHgF,WAAW,cACXiJ,IAAIzC,GACJ0C,OAAO,qCACSN,IAAoB,IAElC,KAAD,EAEJO,MAAM,cAAD,OAAeP,EAAe,+BACnC,2CACD,gBAjBuB,sCAmBlBQ,EAAmB,yCAAG,WAAO9J,GAAU,kEACpB,OAAvBA,EAAMC,iBAAiB,SAEjBvE,GACHgF,WAAW,cACXiJ,IAAIzC,GACJ0C,OAAO,qCACSN,IAAoB,IAElC,KAAD,EAEJO,MAAM,cAAD,OAAeP,EAAe,+BACnC,2CACD,gBAbwB,sCAenBvJ,EAAQ,yCAAG,WAAOC,GAAU,kEACT,OAAvBA,EAAMC,iBAAiB,SAEjBvE,GAAUgF,WAAW,eAAeiJ,IAAI,eAAeC,OAAO,CAClEV,UAAWA,IACV,KAAD,EAEFW,MAAM,gDAAD,OAAcX,EAAS,+BAC5B,2CACD,gBATa,sCAURa,EAAmB,yCAAG,WAAO/J,GAAU,kEACpB,OAAvBA,EAAMC,iBAAiB,SAEjBvE,GAAUgF,WAAW,cAAciJ,IAAIzC,GAAI0C,OAAO,CACtDR,YAAaA,IACZ,KAAD,EAEFS,MAAM,eAAD,OAAgBT,EAAW,+BAChC,2CACD,gBATwB,sCAUnBY,EAAe,yCAAG,WAAOhK,GAAU,kEAEvC,OADAA,EAAMC,iBACN,SAEMvE,GAAUgF,WAAW,gBAAgBC,IAezC,CACEmH,SAAU,mEACVC,YAAa,UAEf,KAAD,EAED8B,MAAM,gDACN,2CACD,gBA3BoB,sCA8BrB,EAA0BzL,mBAAS,IAAG,mBAA/B6L,EAAK,KAAEC,EAAQ,KACtB,EAAkC9L,mBAAS,IAAG,mBAAvC+L,EAAS,KAAEC,EAAY,KAC9B,EAAkChM,mBAAS,IAAG,mBAAvCiM,EAAS,KAAEC,EAAY,KAExBC,EAA2B,SAACvK,GAChC,MAEIA,EADFvC,OAAUsH,EAAI,EAAJA,KAAMtF,EAAK,EAALA,MAEL,UAATsF,EACFmF,EAASzK,GACS,cAATsF,EACTqF,EAAa3K,GACK,cAATsF,GACTuF,EAAa7K,IAIX+K,EAAkB,yCAAG,WAAOxK,GAAU,kEACnB,GAAvBA,EAAMC,iBAAiB,SAGjBkK,GAAaE,EAAS,gCAClB7O,GAAYiP,+BAA+BR,EAAOE,GAAW,KAAD,EAClEN,MAAM,0CAAY,sBACI,IAAbM,GAAgC,IAAbE,EAC5BR,MAAM,wEACGM,GAAaE,GACtBR,MAAM,qFACP,mHAIJ,gBAfuB,sCAiBxB,OAAQL,EAoKN,qCACE,gBAAC,GAAS,WACR,eAACkB,GAAU,CACT9K,MAAO,CACL+K,UAAW,QACXC,SAAU,OACVC,WAAY,iBACZ,wHAIJ,eAACH,GAAU,CACT9K,MAAO,CACL+K,UAAW,OACXC,SAAU,OACVC,WAAY,iBACZ,0JAIJ,eAACH,GAAU,CACT9K,MAAO,CACL+K,UAAW,OACXC,SAAU,OACVC,WAAY,iBACZ,4LA5LR,qCACE,gBAAC,GAAS,WACR,sBACEjL,MAAO,CAAE+K,UAAW,QAASC,SAAU,OAAQE,WAAY,QAAS,kDAItE,wBACA,wBACA,uBAAM/K,SAAUiK,EAAgB,SAC9B,eAAC/K,GAAS,2DAEZ,wBACA,sBACEW,MAAO,CACLC,OAAQ,OACR+K,SAAU,OACVE,WAAY,SACZ,uCAIJ,eAACC,GAAa,UACZ,eAACC,GAAc,CACbxJ,KAAK,OACLH,YAAY,4BACZF,SAAUsI,MAGd,wBACA,uBAAM1J,SAAU2J,EAAmB,SACjC,eAACzK,GAAS,0CAGZ,wBACA,sBACEW,MAAO,CACLC,OAAQ,OACR+K,SAAU,OACVE,WAAY,SACZ,uCAIJ,eAACC,GAAa,UACZ,eAACC,GAAc,CACbxJ,KAAK,OACLH,YAAY,4BACZF,SAAUsI,MAGd,wBACA,uBAAM1J,SAAU+J,EAAoB,SAClC,eAAC7K,GAAS,0CAEZ,sBACEW,MAAO,CACLC,OAAQ,OACR+K,SAAU,OACVE,WAAY,SACZ,uEAIJ,eAACJ,GAAU,yGAEX,eAACK,GAAa,UACZ,eAACC,GAAc,CACbxJ,KAAK,OACLH,YAAY,4BACZF,SApMO,SAACnB,GAChB,IACYP,EACRO,EADFvC,OAAUgC,MAEZ0J,EAAa1J,QAmMT,wBACA,uBAAMM,SAAUA,EAAS,SACvB,eAACd,GAAS,uDAEZ,wBACA,wBACA,sBACEW,MAAO,CACLC,OAAQ,OACR+K,SAAU,OACVE,WAAY,SACZ,2DAIJ,eAACJ,GAAU,gOAIX,eAACA,GAAU,iGAGX,eAACA,GAAU,kRAIX,eAACK,GAAa,UACZ,eAACC,GAAc,CACbxJ,KAAK,OACLH,YAAY,4BACZF,SA3OkB,SAACnB,GAC3B,IACYP,EACRO,EADFvC,OAAUgC,MAEZ4J,EAAe5J,QA0OX,wBACA,uBAAMM,SAAUgK,EAAoB,SAClC,eAAC9K,GAAS,uDAGZ,wBACA,wBACA,wBACA,eAAC,GAAS,UACR,wBAAMc,SAAUyK,EAAmB,UACjC,qBAAI5K,MAAO,CAAEiL,WAAY,gBAAiBD,SAAU,QAAS,yDAG7D,gBAAC,GAAY,WACX,eAACtO,GAAU,CACT+E,YAAY,qBACZ0D,KAAK,QACLvD,KAAK,QACLyJ,UAAQ,EACRxL,MAAOwK,EACP9I,SAAUoJ,IAEZ,eAACjO,GAAU,CACT+E,YAAY,2BACZ0D,KAAK,YACLvD,KAAK,WACLyJ,UAAQ,EACRxL,MAAO0K,EACPhJ,SAAUoJ,IAEZ,eAACjO,GAAU,CACT+E,YAAY,wCACZ0D,KAAK,YACLvD,KAAK,WACLyJ,UAAQ,EACRxL,MAAO4K,EACPlJ,SAAUoJ,OAGd,eAAC,GAAY,UACX,eAACtL,GAAS,CAACuC,KAAK,SAAQ,gEAI9B,wBACA,wBACA,wBACA,eAACrC,GAAW,CACV5B,QAAS,aAEP,4CA2CNnB,GAAYL,KAAOC,IAAG,iGAKtB+O,GAAgBhP,KAAOmP,KAAI,yMA2C3BF,IAjCcjP,KAAOkC,SAAQ,qoBAiCZlC,KAAOQ,MAAK,mkBA+B7BmO,GAAa3O,KAAOC,IAAG,+FAMvBsH,GAAevH,KAAOC,IAAG,8JASzByG,GAAe1G,KAAOC,IAAG,sKClbzBmP,GAAMpP,KAAOW,IAAG,qEAKhB+B,GAAO1C,KAAOC,IAAG,yJAWjB6J,GAAU9J,KAAOC,IAAG,kKASpBoP,GAAMrP,KAAOC,IAAG,wEAKPqP,GApDC,WACd,IAAMjO,EAAUC,eAQhB,OANAsC,qBAAU,WACR2L,YAAW,WACTlO,EAAQ,aACP,QAIH,gBAAC,GAAO,WACN,gBAAC,GAAI,0DACM,wBACT,8CAAS,8DAEX,eAAC+N,GAAG,CAACtN,IAAK4F,KAEV,eAAC2H,GAAG,kFCtBK,OAA0B,oCCA1B,OAA0B,iCCA1B,OAA0B,iCCA1B,OAA0B,sCCA1B,OAA0B,iCCA1B,OAA0B,sCCA1B,OAA0B,iCCA1B,OAA0B,mCCiJnCvF,GAAU9J,KAAOC,IAAG,gJAQpBmP,GAAMpP,KAAOW,IAAG,+CAIhB+B,GAAO1C,KAAOC,IAAG,8FAMjB+C,GAAUhD,KAAOC,IAAG,kKASpBoP,GAAMrP,KAAOC,IAAG,wEAKhB4J,GAAW7J,KAAOW,IAAG,+CAIrB6O,GAAexP,KAAOC,IAAG,sEAKzBwP,GAAiBzP,KAAOC,IAAG,mUAMPyP,IAQpBxE,GAAWlL,KAAOC,IAAG,8FAMrB0P,GAAS3P,KAAOC,IAAG,gJAWnB2P,GAAU5P,KAAOW,IAAG,oDAIpBkP,GAAgB7P,KAAOC,IAAG,oGAM1BsI,GAAoBvI,KAAOC,IAAG,wHAO9BuI,GAAUxI,KAAOW,IAAG,gDAIpB8H,GAAczI,KAAOC,IAAG,0LAcxBgI,GAAcjI,KAAOC,IAAG,iDAIxB6P,GAAU9P,KAAOC,IAAG,6BAEpB8P,GAAY/P,KAAOC,IAAG,wEAKtB+P,GAAehQ,KAAOW,IAAG,4FAMzBsP,GAASjQ,KAAOC,IAAG,2GAMViQ,GAnQA,WACb,OACE,uCACE,gBAACD,GAAM,WACL,sBAAKnO,IAAKqO,KACV,sBAAKrO,IAAKsO,QAEZ,gBAAC,GAAO,WACN,gBAAC,GAAO,WACN,eAAC,GAAG,CAACtO,IAAKuO,KACV,eAAC,GAAI,kEACL,eAAC,GAAG,+EAEJ,gBAACb,GAAY,WACX,eAAC,GAAQ,CAAC1N,IAAK8I,KACf,eAAC,GAAQ,CAAC9I,IAAK8I,KACf,eAAC,GAAQ,CAAC9I,IAAK8I,KACf,eAAC,GAAQ,CAAC9I,IAAK8I,KACf,eAAC,GAAQ,CAAC9I,IAAK+I,WAGnB,gBAAC4E,GAAc,WACb,eAAC,GAAQ,iEACT,eAACE,GAAM,gIAEP,eAACC,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,wEACT,gBAACX,GAAM,WACL,gBAACE,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,gEACc,OAEhB,gBAACsG,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,gEACc,OAEhB,gBAACsG,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,mEAIJ,eAACqG,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,wEACT,eAACX,GAAM,UACL,gBAACE,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,kEAIJ,eAACqG,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,0DACT,gBAAC,GAAiB,WAChB,gBAAC,GAAW,CAACxH,UAAU,QAAO,UAC5B,eAACgH,GAAO,oDACR,eAAC,GAAO,CAAChO,IAAKmH,QAGhB,gBAAC,GAAW,WACV,eAAC6G,GAAO,oDACR,eAAC,GAAO,CAAChO,IAAKqH,QAGhB,gBAAC,GAAW,CAACL,UAAU,QAAO,UAC5B,eAACgH,GAAO,oDACR,eAAC,GAAO,CAAChO,IAAKuH,GAAUP,UAAU,gBAItC,eAAC8G,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,0DACT,gBAACX,GAAM,WACL,gBAACE,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,gEACc,OAEhB,gBAACsG,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,gEACc,OAEhB,gBAACsG,GAAa,WACZ,sBAAK/N,IAAKyH,KACV,mEAIJ,eAACqG,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,iEACT,eAACX,GAAM,UACL,gBAAC,GAAW,WACV,sBAAK7N,IAAKuG,KAAW,QACrB,sBAAKvG,IAAKuG,KAAW,QACrB,sBAAKvG,IAAKuG,UAGd,eAACuH,GAAO,CAAC9N,IAAKwO,KAEd,eAAC,GAAQ,wEACT,gBAACX,GAAM,WACL,eAACE,GAAa,UACZ,sBAAK/N,IAAKyO,OACI,OAEhB,eAACV,GAAa,UACZ,sBAAK/N,IAAKyO,OACI,OAEhB,eAACV,GAAa,UACZ,sBAAK/N,IAAKyO,aAIhB,eAACR,GAAS,kEACV,eAACC,GAAY,CAAClO,IAAK0O,YCjEZC,OAzDf,WACE,MAAoCpO,oBAAS,GAAM,mBAAhCqO,GAAF,KAAe,MAChC,EAAwBrO,oBAAS,GAAM,mBAA1BsO,GAAF,KAAS,MACpB,EAAmCtO,mBAAS,MAAK,mBAA1CD,EAAO,KAAEwO,EAAU,KAc1B,OAZAhN,qBAAU,WACRnE,GAAYoR,oBAAmB,SAACC,GAC1BA,GACFJ,EAAcI,GACdF,EAAWE,IAEXJ,GAAc,GAEhBC,GAAQ,QAET,IAGD,uCACE,eAACzQ,GAAW,IACZ,eAACH,GAAQ,UACP,eAAC,KAAM,UACL,gBAAC,KAAM,4BAGL,eAAC,KAAK,CAACgR,KAAK,QAAQC,QAAS,eAAC,GAAI,CAAC5O,QAASA,MAC5C,eAAC,KAAK,CAAC2O,KAAK,SAASC,QAAS,eAAC,GAAK,CAAC5O,QAASA,MAC9C,eAAC,KAAK,CAAC2O,KAAK,gBAAgBC,QAAS,eAAC,GAAY,MAClD,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAO,MACxC,eAAC,KAAK,CACJD,KAAK,gBACLC,QAAS,eAAC,GAAQ,CAAC5O,QAASA,MAE9B,eAAC,KAAK,CAAC2O,KAAK,QAAQC,QAAS,eAAC,GAAI,MAClC,eAAC,KAAK,CACJD,KAAK,WACLC,QAAS,eAAC,GAAO,CAAC5O,QAASA,MAE7B,eAAC,KAAK,CAAC2O,KAAK,WAAWC,QAAS,eAAC,GAAO,MACxC,eAAC,KAAK,CAACD,KAAK,UAAUC,QAAS,eAAC,GAAM,MAAa,QAEnD,eAAC,KAAK,CAACD,KAAK,IAAIC,QAAS,eAAC,GAAK,MAC/B,eAAC,KAAK,CAACD,KAAK,SAASC,QAAS,eAAC,GAAI,MACnC,eAAC,KAAK,CAACD,KAAK,UAAUC,QAAS,eAAC,GAAM,MAAO,eCxDzDC,IAASC,OACP,eAAC,IAAMC,WAAU,UACf,eAAC,GAAG,MAENrF,SAASsF,eAAe,W","file":"static/js/main.a71c2b2b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBjZ8d4NItswRgO4ch-i12OwvQ6LNZTWk\",\r\n  authDomain: \"retrospectpost.firebaseapp.com\",\r\n  projectId: \"retrospectpost\",\r\n  storageBucket: \"retrospectpost.appspot.com\",\r\n  messagingSenderId: \"115115406569\",\r\n  appId: \"1:115115406569:web:ec44d5e78ba68e6a896c78\",\r\n  measurementId: \"G-2M9Q1G3YL2\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\nimport reset from \"styled-reset\"\r\n\r\nexport const MediaDiv = styled.div`\r\n  margin: 0px auto;\r\n  min-height: calc(var(--vh, 1vh) * 100);\r\n  width: 768px;\r\n  margin: 0 auto;\r\n  background-color: #f5f5f5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'KyoboHand';\r\n        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@1.0/KyoboHand.woff') format('woff');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n    ${reset}\r\n    body {\r\n        box-sizing: border-box;\r\n        margin: 0px;\r\n        font-family: 'KyoboHand';\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'KyoboHand';\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const TitleDiv = styled.div`\r\n  width: 176px;\r\n  height: 17px;\r\n  text-align: center;\r\n  padding-top: 3px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n\r\n  color: #222;\r\n`;\r\nexport const InputStyle = styled.input`\r\n  width: 305px;\r\n  height: 45px;\r\n  background-color: #f5f5f5;\r\n  color: #222;\r\n\r\n  border-color: transparent;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #bab8b5;\r\n  padding-left: 10px;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 25px;\r\n\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n// write.js\r\nexport const WriteTitleDiv = styled.div`\r\n  width: 159px;\r\n  height: 58px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 29px;\r\n  text-align: center;\r\n\r\n  color: #222;\r\n`;\r\nexport const LetterStyle = styled.img`\r\n    width: 70px;\r\n    height: 43.47px;\r\n    margin-bottom: 22.53px;\r\n`\r\nexport const WriteSubTitle = styled.div`\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 17px;\r\n    \r\n    color: #686363;\r\n`\r\n// common\r\n\r\nexport const ButtonLayout = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12.57px;\r\n    margin-top: 62.02px;\r\n    margin-bottom: 142px;\r\n`","import styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const ModalCloseButton = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 1.2rem;\r\n  &:active {\r\n    background-color: white;\r\n    filter: brightness(80%);\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1;\r\n`;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/AnswerNext.f39c127e.svg\";","export default __webpack_public_path__ + \"static/media/CloseButton.dbbd1044.svg\";","import React from \"react\";\r\nimport { Background, ModalCloseButton } from \"./styles\";\r\nimport { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport answerImg from \"../../assets/AnswerNext.svg\";\r\nimport CloseButton from \"../../assets/CloseButton.svg\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst TimeTitle = () => {\r\n  const todayTime = () => {\r\n    let now = new Date();\r\n    let todayYear = now.getFullYear();\r\n    let todayMonth = now.getMonth() + 1;\r\n    let todayDate = now.getDate();\r\n\r\n    return todayYear + \".\" + todayMonth + \".\" + todayDate;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    {todayTime().slice(0, 9)}\r\n      <span>{todayTime().slice(9, 12)}</span>\r\n      <span>{todayTime().slice(12, 19)}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = ({ closeModal, children }: any) => {\r\n  const outside: any = useRef();\r\n  const divRef = React.useRef<HTMLDivElement | null>(null)\r\n\r\n  const history = useNavigate();\r\n  const toPost = () => {\r\n    history(\"/question/1\");\r\n  };\r\n\r\n  return (\r\n    <Background\r\n    ref={divRef}\r\n    onClick={ (e) => { if(e.target == outside.current) closeModal(false) } }\r\n    >\r\n    \r\n    <ModalWrapper>\r\n    <StampLayout src={CloseButton} onClick={closeModal}/>\r\n      <ModalImg onClick={toPost} src={answerImg}></ModalImg>\r\n    </ModalWrapper>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst ModalWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 300px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 290px;\r\n`;\r\n\r\nconst ModalImg = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst SentenceInput = styled.textarea`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 30px;\r\n  background: none;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst StampLayout = styled.img`\r\n  position: absolute;\r\n  width: 42px;\r\n  height: 42px;\r\n  left: 260.5px;\r\n  bottom: 140px\r\n`","export default __webpack_public_path__ + \"static/media/Post.f2a439ab.svg\";","export default __webpack_public_path__ + \"static/media/OKButton.328513e9.svg\";","import Nweet from \"../components/Nweet\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, TitleDiv, ButtonLayout } from \"./styles/style\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport LetterModal from \"../components/Modal/LetterModal\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Post from \"../assets/Post.svg\";\r\nimport OKButtonImg from \"../assets/OKButton.svg\";\r\nimport LetterButton from \"../assets/LetterButton.svg\";\r\nimport React from \"react\";\r\n\r\nconst Home = ({ userObj }: any) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const history = useNavigate();\r\n  const toPost = () => {\r\n    history(\"/post\");\r\n  };\r\n  const toWrite = () => {\r\n    history(\"/question/1\");\r\n  };\r\n\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const onClickOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const onClickCloseModal = () => {\r\n    setModalOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleDiv>회고</TitleDiv>\r\n        <PostImg src={Post} />\r\n        <Text>\r\n          고영희 집배원이 <br />\r\n          <b>3통</b>의 편지를 가져왔어요!\r\n        </Text>\r\n        <SubText>떠나기 전에 답장해볼까요?</SubText>\r\n        <OKButton src={OKButtonImg} onClick={onClickOpenModal}/>\r\n        {isModalOpen && (\r\n          <LetterModal closeModal={onClickCloseModal}/>\r\n        )}{\" \"}\r\n      </Container>\r\n      {/* <div>\r\n              {\r\n              nweets.map((nweet) => (\r\n                  <Nweet \r\n                  key={nweet.id} \r\n                  nweetObj={nweet}\r\n                  isOwner={nweet.creatorId === userObj.uid}\r\n                  />\r\n              ))}\r\n        </div> */}{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst OKButton = styled.img`\r\n  width: 60px;\r\n  height: 58px;\r\n  margin-top: 36px;\r\n`;\r\nconst LetterImg = styled.img`\r\n  width: 76px;\r\n  height: 71px;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst PostImg = styled.img`\r\n  width: 180px;\r\n  height: 285px;\r\n  margin-top: 36px;\r\n`;\r\n\r\n\r\nconst Text = styled.div`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  line-height: 28px;\r\n\r\n  b {\r\n    color: #ff89a9;\r\n  }\r\n`;\r\n\r\nconst SubText = styled.div`\r\n  font-size: 16px;\r\n  color: #494545;\r\n  margin-top: 20px;\r\n`;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst Profile = () => {\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history(\"/\");\r\n  };\r\n  const history = useNavigate();\r\n  return (\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled from \"styled-components\"\r\n\r\nexport const RedButton = styled.button`\r\n    width: 281px;\r\n    height: 29px;\r\n    border-width: 1.5px;\r\n    border-style: dashed;\r\n    border-color: white;\r\n    border-radius: 1px;\r\n    background-color: #AF2010;\r\n    outline-width: 9px;\r\n    outline-color:  #AF2010;\r\n    outline-style: solid;\r\n\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: white;\r\n    \r\n    margin-top: 9px;\r\n    margin-bottom: 9px;\r\n    :disabled {\r\n        background-color: rgba(175, 32, 16, 0.5);\r\n        outline-color:  rgba(175, 32, 16, 0.5);\r\n    }\r\n\r\n`\r\n\r\nexport const WhiteButton = styled.button`\r\n    width: 281px;\r\n    height: 29px;\r\n\r\n    box-shadow:  0 0 0 10px #AF2010;\r\n\r\n    border: 1.5px dashed #AF2010;\r\n    outline:  solid white;\r\n    box-shadow: 0 0 0 8px white, 0 0 0 9px #AF2010;\r\n\r\n    border-radius: 2px;\r\n    background-color: white; \r\n\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: #AF2010;\r\n    \r\n    margin-top: 9px;\r\n    margin-bottom: 9px;\r\n`","import { useEffect, useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Container,\r\n  WriteTitleDiv,\r\n  ButtonLayout,\r\n  LetterStyle,\r\n} from \"./styles/style\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport Letter from \"../assets/Letter.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\n\r\nconst Write = ({ userObj }: any) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const ref: any = useRef();\r\n\r\n  useEffect(() => {\r\n    // textarea scroll height 설정\r\n    ref.current.style.height = \"0px\";\r\n    const scrollHeight = ref.current.scrollHeight;\r\n    ref.current.style.height = scrollHeight + \"px\";\r\n  }, [value]);\r\n\r\n  const onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      // file\r\n      const attRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    // text by db\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event: any) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n\r\n    const v = event.target.value;\r\n    setValue(v);\r\n  };\r\n\r\n  const onFileChange = (event: any) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      }: any = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  // const buttonDisabled = nweet && Input;\r\n\r\n  const history = useNavigate();\r\n  const onClickSuccessWrite = () => {\r\n    history(\"/writesuccess\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <LetterDiv>📩</LetterDiv>\r\n        <br />\r\n        <WriteTitleDiv>\r\n          회고록\r\n          <br />\r\n          문서 작성\r\n        </WriteTitleDiv>\r\n        <Textarea\r\n          ref={ref}\r\n          value={nweet}\r\n          onChange={onChange}\r\n          placeholder=\"회고록 작성!\"\r\n          maxLength={1000}\r\n        />\r\n        <Input type=\"text\" placeholder=\"닉네임을 입력하세요 (10자 이하)\" />\r\n        <form onSubmit={onSubmit}>\r\n          <RedButton\r\n            type=\"submit\"\r\n            disabled={true}\r\n            onClick={onClickSuccessWrite}\r\n            value=\"Nw\"\r\n          >\r\n            보내기\r\n          </RedButton>\r\n        </form>\r\n        <FileInput type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}{\" \"}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n\r\nconst Textarea = styled.textarea`\r\n  overflow: hidden;\r\n\r\n  box-sizing: border-box;\r\n  min-height: 183px;\r\n  width: 293px;\r\n  margin-top: 33px;\r\n  padding-top: 25px;\r\n\r\n  background: #ffffff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 7px;\r\n\r\n  text-align: center;\r\n  font-size: 13px;\r\n  line-height: 19px;\r\n\r\n  :focus::placeholder {\r\n    color: transparent;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-size: 13px;\r\n    line-height: 19px;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n\r\n  width: 293px;\r\n  height: 39px;\r\n\r\n  background: #ffffff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 7px;\r\n  margin: 20px;\r\n\r\n  text-align: center;\r\n  font-size: 13px;\r\n  line-height: 19px;\r\n\r\n  :focus::placeholder {\r\n    color: transparent;\r\n  }\r\n\r\n  ::placeholder {\r\n    font-size: 13px;\r\n    line-height: 19px;\r\n    color: #bab8b5;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst LetterDiv = styled.div`\r\n  font-size: 50px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Letter.ea260cf9.svg\";","import { LetterStyle, WriteSubTitle } from \"./styles/style\";\r\nimport Letter from \"../assets/Letter.svg\";\r\nimport styled from \"styled-components\";\r\nimport { RedButton, WhiteButton } from \"./styles/buttonstyle\";\r\nimport React from \"react\";\r\n\r\nconst WriteSuccess = () => {\r\n  return (\r\n    <Container>\r\n      <LetterStyle src={Letter} />\r\n      <WriteSuccessTitle>편지를 보냈어요!</WriteSuccessTitle>\r\n      <WriteSubTitle>아직 내 호텔이 없나요?</WriteSubTitle>\r\n      <WriteSubTitle>내 호텔을 만들면</WriteSubTitle>\r\n      <WriteSubTitle>친구에게 편지를 받을 수 있어요.</WriteSubTitle>\r\n      <ButtonLayout>\r\n        <RedButton>내 호텔 만들기</RedButton>\r\n        <WhiteButton>로그인</WhiteButton>\r\n      </ButtonLayout>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WriteSuccess;\r\n\r\nconst WriteSuccessTitle = styled.div`\r\n  text-align: center;\r\n  width: 141px;\r\n  height: 29px;\r\n`;\r\nconst ButtonLayout = styled.div`\r\n  text-align: center;\r\n  margin-top: 64px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 224px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Google.53546abe.svg\";","export default __webpack_public_path__ + \"static/media/Github.426ae318.svg\";","import Google from \"../assets/Google.svg\";\r\nimport Github from \"../assets/Github.svg\";\r\nimport { Container } from \"./styles/style\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { firebaseInstance, authService } from \"../fbase\";\r\nconst Auth = () => {\r\n  const navi = useNavigate();\r\n\r\n  const onSocialClick = async (event: any) => {\r\n    const {\r\n      target: { alt },\r\n    } = event;\r\n    let provider: any;\r\n    if (alt === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (alt === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n\r\n    navi(\"/home\");\r\n    //console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonStyle>\r\n        <img src={Google} onClick={onSocialClick} alt=\"google\"/>\r\n        <img src={Github} onClick={onSocialClick} alt=\"github\"/>\r\n\r\n      </ButtonStyle>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n\r\nconst ButtonStyle = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n","import { Container, InputStyle, TitleDiv } from \"./styles/style\";\r\nimport styled from \"styled-components\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleDiv>회고 우체국</TitleDiv>\r\n        <InputLayout2>\r\n          <InputStyle placeholder=\"닉네임\" />\r\n          <InputStyle placeholder=\"아이디\" />\r\n          <InputStyle placeholder=\"비밀번호\" />\r\n          <InputStyle placeholder=\"비밀번호 확인\" />\r\n        </InputLayout2>\r\n        <RedButton disabled={true} type=\"submit\">\r\n          내 호텔 만들기\r\n        </RedButton>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\nconst InputLayout2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 9px;\r\n  margin-top: 72px;\r\n  margin-bottom: 39px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/PostByStart.f2a439ab.svg\";","import styled from \"styled-components\";\r\nimport PostByStart from \"../assets/PostByStart.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, TitleDiv } from \"./styles/style\";\r\nimport Auth from \"./Auth\";\r\nimport React from \"react\";\r\n\r\nconst Start = () => {\r\n  const history = useNavigate();\r\n\r\n  const onclickPath = () => {\r\n    history(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <HotelImg src={PostByStart} />\r\n        <Text>\r\n          고영희 집배원이 <br />\r\n          <b>2월</b>의 편지를 가져왔어요!\r\n        </Text>\r\n        <SubText>떠나기 전에 답장해볼까요?</SubText>\r\n        <Auth />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n\r\nconst Text = styled.div`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  line-height: 28px;\r\n\r\n  b {\r\n    color: #ff89a9;\r\n  }\r\n`;\r\nconst HotelImg = styled.img`\r\n  width: 180px;\r\n  height: 285px;\r\n  margin-top: 36px;\r\n`;\r\n\r\nconst SubText = styled.div`\r\n  font-size: 16px;\r\n  color: #494545;\r\n  margin-top: 20px;\r\n`;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst Button = ({ label, setNext }: any) => {\r\n  const onClick = () => {\r\n    setNext();\r\n  };\r\n  return <ButtonWrapper onClick={onClick}>{label}</ButtonWrapper>;\r\n};\r\n\r\nconst ButtonWrapper = styled.div`\r\n  border-radius: 40px;\r\n  background-color: #222;\r\n  padding: 12px;\r\n  color: #fff;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/Chip.493b2b34.svg\";","import ChipImg from \"../assets/Chip.svg\";\r\nimport styled from \"styled-components\";\r\nconst AnswerSelect = ({ setAnswerData }: any) => {\r\n  return (\r\n    <AnswerSelectWrapper>\r\n      <ChipWrapper>\r\n        <Chips src={ChipImg} color=\"red\"></Chips>\r\n        <ChipsInput placeholder=\"???\"></ChipsInput>\r\n      </ChipWrapper>\r\n\r\n      <ChipWrapper>\r\n        <Chips src={ChipImg} color=\"red\"></Chips>\r\n        <ChipsInput placeholder=\"???\"></ChipsInput>\r\n      </ChipWrapper>\r\n\r\n      <ChipWrapper>\r\n        <Chips src={ChipImg} color=\"red\"></Chips>\r\n        <ChipsInput placeholder=\"???\"></ChipsInput>\r\n      </ChipWrapper>\r\n    </AnswerSelectWrapper>\r\n  );\r\n};\r\n\r\nconst AnswerSelectWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 70px;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Chips = styled.img``;\r\n\r\nconst ChipWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst ChipsInput = styled.input`\r\n  position: absolute;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 999;\r\n  background: none;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:placeholder {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default AnswerSelect;\r\n","export default __webpack_public_path__ + \"static/media/Rank1.ee5238bc.svg\";","export default __webpack_public_path__ + \"static/media/Rank2.1589af13.svg\";","export default __webpack_public_path__ + \"static/media/Rank3.c7084ed3.svg\";","import styled from \"styled-components\";\r\nimport rankImg1 from \"../assets/Rank1.svg\";\r\nimport rankImg2 from \"../assets/Rank2.svg\";\r\nimport rankImg3 from \"../assets/Rank3.svg\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AnswerRank = ({ setAnswerData }: any) => {\r\n  const [rank, setAnswer] = useState({});\r\n  setAnswerData(rank);\r\n\r\n  return (\r\n    <AnswerRankWrapper>\r\n      <RankWrapper className=\"rank2\">\r\n        <RankInput\r\n          onChange={(e) => setAnswer({ ...rank, rank2: e.target.value })}\r\n          name=\"rank2\"\r\n          placeholder=\"답변입력2위\"\r\n        ></RankInput>\r\n        <RankImg src={rankImg2}></RankImg>\r\n      </RankWrapper>\r\n\r\n      <RankWrapper>\r\n        <RankInput\r\n          onChange={(e) => setAnswer({ ...rank, rank1: e.target.value })}\r\n          placeholder=\"답변입력1위\"\r\n        ></RankInput>\r\n        <RankImg src={rankImg1}></RankImg>\r\n      </RankWrapper>\r\n\r\n      <RankWrapper className=\"rank3\">\r\n        <RankInput\r\n          onChange={(e) => setAnswer({ ...rank, rank3: e.target.value })}\r\n          placeholder=\"답변입력3위\"\r\n        ></RankInput>\r\n        <RankImg src={rankImg3} className=\"rank3\"></RankImg>\r\n      </RankWrapper>\r\n    </AnswerRankWrapper>\r\n  );\r\n};\r\n\r\nconst AnswerRankWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 70px;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst RankImg = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nconst RankWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  &.rank2 {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  &.rank3 {\r\n    margin-top: 75px;\r\n  }\r\n`;\r\n\r\nconst RankInput = styled.input`\r\n  max-width: 60px;\r\n  border: none;\r\n  background: none;\r\n\r\n  &:focus {\r\n    color: #525252;\r\n    outline: none;\r\n  }\r\n\r\n  &:placeholder {\r\n    color: #525252;\r\n  }\r\n`;\r\n\r\nexport default AnswerRank;\r\n","export default __webpack_public_path__ + \"static/media/AnswerBack.1cb44df9.svg\";","import styled from \"styled-components\";\r\nimport answerImg from \"../assets/AnswerBack.svg\";\r\n\r\nimport { dbService } from \"../fbase\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst AnswerSentence = ({ setAnswerData }: any) => {\r\n  const [answer, setAnswer] = useState({});\r\n  setAnswerData(answer);\r\n\r\n  return (\r\n    <AnswerSentenceWrapper>\r\n      <AnswerImg src={answerImg}></AnswerImg>\r\n      <SentenceInput\r\n        onChange={(e: any) => setAnswer({ ...answer, data: e.target.value })}\r\n        placeholder=\"답변을 입력해주세요\"\r\n      ></SentenceInput>\r\n    </AnswerSentenceWrapper>\r\n  );\r\n};\r\n\r\nconst AnswerSentenceWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 70px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 290px;\r\n`;\r\n\r\nconst AnswerImg = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst SentenceInput = styled.textarea`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 30px;\r\n  background: none;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default AnswerSentence;\r\n","export default __webpack_public_path__ + \"static/media/BlackHeart.c7576cb6.svg\";","export default __webpack_public_path__ + \"static/media/PinkHeart.bdcb52d7.svg\";","import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BlackHeart from \"../assets/BlackHeart.svg\";\r\nimport PinkHeart from \"../assets/PinkHeart.svg\";\r\n\r\nconst AnswerScore = ({ setAnswerData }: any) => {\r\n  let heartList: any = [\r\n    {\r\n      idx: 1,\r\n      is_checked: true,\r\n      text: \"아쉬움이 남아요\",\r\n    },\r\n    {\r\n      idx: 2,\r\n      is_checked: true,\r\n      text: \"나쁘지않은 한달이었어요\",\r\n    },\r\n    {\r\n      idx: 3,\r\n      is_checked: true,\r\n      text: \"이번 달이 잘 마무리 되었어요\",\r\n    },\r\n    {\r\n      idx: 4,\r\n      is_checked: false,\r\n      text: \"만족스러운 한 달 이였어요!\",\r\n    },\r\n    {\r\n      idx: 5,\r\n      is_checked: false,\r\n      text: \"다음 달도 이번 달만 같으면 좋겠어요!\",\r\n    },\r\n  ];\r\n\r\n  const AnswerSelected = [\r\n    \"아쉬움이 남아요\",\r\n    \"나쁘지않은 한달이었어요\",\r\n    \"이번 달이 잘 마무리 되었어요\",\r\n    \"만족스러운 한 달 이였어요!\",\r\n    \"다음 달도 이번 달만 같으면 좋겠어요!\",\r\n  ];\r\n\r\n  const [heart, setHeart] = useState([]);\r\n  const [answerText, setAnswerText] = useState(AnswerSelected[2]);\r\n\r\n  useEffect(() => {\r\n    setHeart(heartList);\r\n  }, []);\r\n\r\n  const setFillHeart = (item: any) => {\r\n    heartList.filter((item: any) => (item.is_checked = false));\r\n\r\n    for (let i = 0; i < item.idx; i++) {\r\n      heartList[i].is_checked = true;\r\n      setHeart(heartList);\r\n    }\r\n    let count = 0;\r\n    heartList.filter((item: any) => {\r\n      if (item.is_checked) {\r\n        count++;\r\n      }\r\n    });\r\n    setAnswerText(AnswerSelected[count - 1]);\r\n  };\r\n\r\n  return (\r\n    <AnswerScoreWrapper>\r\n      <Wrapper>\r\n        {heart.map((item: any) => (\r\n          <HeartItem>\r\n            <HeartImg\r\n              src={item.is_checked ? PinkHeart : BlackHeart}\r\n              onClick={() => setFillHeart(item)}\r\n            ></HeartImg>\r\n          </HeartItem>\r\n        ))}\r\n      </Wrapper>\r\n      <HeartText>{answerText}</HeartText>\r\n    </AnswerScoreWrapper>\r\n  );\r\n};\r\n\r\nconst AnswerScoreWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 70px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst HeartImg = styled.img`\r\n  width: 50px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst HeartText = styled.div`\r\n  font-size: 15px;\r\n  margin-top: 18px;\r\n`;\r\n\r\nconst HeartItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-contents: center;\r\n`;\r\n\r\n\r\nexport default AnswerScore;\r\n","import styled from \"styled-components\";\r\nimport back from \"../assets/Background.svg\";\r\nimport letter from \"../assets/Letter.svg\";\r\nimport Button from \"src/components/Button\";\r\nimport AnswerSelect from \"src/components/AnswerSelect\";\r\nimport AnswerRank from \"src/components/AnswerRank\";\r\nimport AnswerSentence from \"src/components/AnswerSentence\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AnswerScore from \"src/components/AnswerScore\";\r\nimport { dbService } from \"src/fbase\";\r\n\r\nexport type IProps = {\r\n  questionIdx: number;\r\n  question: string;\r\n  answer_type: string;\r\n};\r\n\r\nconst Question = ({ userObj }: any) => {\r\n  const { id }: any = useParams();\r\n  const [curQuiz, setQuiz] = useState<IProps>();\r\n  const [questionList, setQuizz]: any = useState();\r\n  const [answer, setAnswer]: any = useState([]);\r\n  const [idx, setIdx] = useState(1);\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"questionList\").onSnapshot((snapshot) => {\r\n      const questionList1: any = snapshot.docs.map((document) => ({\r\n        question: document.data().question,\r\n        answer_type: document.data().answer_type,\r\n        questionIdx: document.data().questionIdx,\r\n      }));\r\n      setQuizz(questionList1);\r\n    });\r\n\r\n    const num = parseInt(id);\r\n    if (questionList) {\r\n      setQuiz(questionList[num - 1]); //렌더링 시 질문 설정 (현재 주소 파라미터에서 질문 번호 가져온다.\r\n      setIdx(num);\r\n    }\r\n\r\n    if (num - 1 === questionList?.length) {\r\n      history(\"/loading\");\r\n      return;\r\n    }\r\n  }, [id]);\r\n\r\n  const setNext = () => {\r\n    setIdx(idx + 1);\r\n    history(\"/question/\" + idx);\r\n    // if (answer || answer.length > 0) {\r\n    //   sampleDB();\r\n    // }\r\n  };\r\n\r\n  const sampleDB = async () => {\r\n    await dbService.collection(\"answer\").add({\r\n      questionIdx: curQuiz?.questionIdx,\r\n      answer: JSON.stringify(answer),\r\n      userIdx: userObj.uid,\r\n    });\r\n  };\r\n  const setAnswerData = (data: any) => {\r\n    setAnswer(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BackgroundImg>\r\n        <div>\r\n          <LetterImg src={letter}></LetterImg>\r\n          <QuestionSub>이번 달 나의</QuestionSub>\r\n          <QuestionTitle>\r\n            {curQuiz?.question ? curQuiz?.question : \"일상은 어땠나요?\"}\r\n          </QuestionTitle>\r\n          {curQuiz && curQuiz?.answer_type === \"rank\" ? (\r\n            <AnswerRank setAnswerData={setAnswerData}></AnswerRank>\r\n          ) : curQuiz?.answer_type === \"sentence\" ? (\r\n            <AnswerSentence setAnswerData={setAnswerData}></AnswerSentence>\r\n          ) : curQuiz?.answer_type === \"word\" ? (\r\n            <AnswerSelect></AnswerSelect>\r\n          ) : (\r\n            <AnswerScore></AnswerScore>\r\n          )}\r\n        </div>\r\n        {/* <Link to={`/question/${idx}`}> */}\r\n        <Button label={\"다음\"} setNext={setNext}></Button>\r\n        {/* </Link> */}\r\n      </BackgroundImg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n\r\nconst LetterImg = styled.img`\r\n  width: 60px;\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 0px 50px;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuestionTitle = styled.div`\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-top: 8px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst QuestionSub = styled.div`\r\n  font-size: 16px;\r\n  color: #494545;\r\n  margin-top: 13px;\r\n`;\r\n","import React from \"react\";\r\nimport { Background, ModalCloseButton } from \"./styles\";\r\nimport { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport answerImg from \"../../assets/AnswerBack.svg\";\r\n\r\nconst TimeTitle = () => {\r\n  const todayTime = () => {\r\n    let now = new Date();\r\n    let todayYear = now.getFullYear();\r\n    let todayMonth = now.getMonth() + 1;\r\n    let todayDate = now.getDate();\r\n\r\n    return todayYear + \".\" + todayMonth + \".\" + todayDate;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todayTime().slice(0, 9)}\r\n      <span>{todayTime().slice(9, 12)}</span>\r\n      <span>{todayTime().slice(12, 19)}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = ({ closeModal, children }: any) => {\r\n  const outside: any = useRef();\r\n  const divRef = React.useRef<HTMLDivElement | null>(null)\r\n  return (\r\n    <Background\r\n      ref={divRef}\r\n      onClick={ (e) => { if(e.target == outside.current) closeModal(false) } }\r\n    >\r\n    <ModalWrapper>\r\n      <ModalImg src={answerImg}></ModalImg>\r\n      <SentenceInput placeholder=\"답변을 입력해주세요\"></SentenceInput>\r\n    </ModalWrapper>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\nconst ModalWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 70px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 290px;\r\n`;\r\n\r\nconst ModalImg = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst SentenceInput = styled.textarea`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 30px;\r\n  background: none;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TimeTitleLayout = styled.div`\r\n  position: absolute;\r\n  left: 225px;\r\n  top: 3px;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n`;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport Modal from \"src/components/Modal/Modal\";\r\nimport Nweet from \"src/components/Nweet\";\r\n\r\nimport {useEffect, useRef, useState } from \"react\";\r\nimport {dbService, storageService} from \"../fbase\";\r\n\r\n\r\ntype UserType = {\r\n  id: number;\r\n  name: string;\r\n  image: string;\r\n};\r\n\r\n//const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 ,22 , 23, 24, 25, 26, 27, 28];\r\nconst Post = ({ userObj }: any) => {\r\n  const images: Array<UserType> = [\r\n    {\r\n      id: 1,\r\n      name: \"Island\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1442530792250-81629236fe54?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9631adb2d2f752e3a0734f393fef634b\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Forest\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468851508491-4f854ec88aa0?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=b1222b6a1d3694cac76d2a23c3a02254\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Whale\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1454991727061-be514eae86f7?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=3c55430f01fe9ac9a9ccb3383d1416ff\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Mountain\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1467890947394-8171244e5410?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9396f0adf263b51b44626228225684d0\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Boat\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1443302382600-0bfacc473376?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=0c0f26518c1001f67b6c2e4480a8d3e0\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Flowers\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1429091443922-e7d9ae79a837?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=e81cb6a60c53788559edb9bec21b80fc\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Fire\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468245856972-a0333f3f8293?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=1f57cc13084e32839627453821a43abf\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Garden\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1427392797425-39090deb14ec?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=8bfe49466d0da200e61128a8ab0e8fbe\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Bridge\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1445723356089-6dbb51d9c4f8?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=6e476c6e7ce1adac161295616d1bec05\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Island\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1442530792250-81629236fe54?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9631adb2d2f752e3a0734f393fef634b\",\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Forest\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468851508491-4f854ec88aa0?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=b1222b6a1d3694cac76d2a23c3a02254\",\r\n    },\r\n    {\r\n      id: 12,\r\n      name: \"Whale\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1454991727061-be514eae86f7?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=3c55430f01fe9ac9a9ccb3383d1416ff\",\r\n    },\r\n    {\r\n      id: 13,\r\n      name: \"Mountain\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1467890947394-8171244e5410?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9396f0adf263b51b44626228225684d0\",\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Boat\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1443302382600-0bfacc473376?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=0c0f26518c1001f67b6c2e4480a8d3e0\",\r\n    },\r\n    {\r\n      id: 15,\r\n      name: \"Flowers\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1429091443922-e7d9ae79a837?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=e81cb6a60c53788559edb9bec21b80fc\",\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Flowers\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1429091443922-e7d9ae79a837?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=e81cb6a60c53788559edb9bec21b80fc\",\r\n    },\r\n    {\r\n      id: 17,\r\n      name: \"Fire\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468245856972-a0333f3f8293?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=1f57cc13084e32839627453821a43abf\",\r\n    },\r\n    {\r\n      id: 18,\r\n      name: \"Island\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1442530792250-81629236fe54?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9631adb2d2f752e3a0734f393fef634b\",\r\n    },\r\n    {\r\n      id: 19,\r\n      name: \"Forest\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468851508491-4f854ec88aa0?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=b1222b6a1d3694cac76d2a23c3a02254\",\r\n    },\r\n    {\r\n      id: 20,\r\n      name: \"Whale\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1454991727061-be514eae86f7?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=3c55430f01fe9ac9a9ccb3383d1416ff\",\r\n    },\r\n    {\r\n      id: 21,\r\n      name: \"Mountain\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1467890947394-8171244e5410?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9396f0adf263b51b44626228225684d0\",\r\n    },\r\n    {\r\n      id: 22,\r\n      name: \"Boat\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1443302382600-0bfacc473376?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=0c0f26518c1001f67b6c2e4480a8d3e0\",\r\n    },\r\n    {\r\n      id: 23,\r\n      name: \"Flowers\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1429091443922-e7d9ae79a837?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=e81cb6a60c53788559edb9bec21b80fc\",\r\n    },\r\n    {\r\n      id: 24,\r\n      name: \"Fire\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468245856972-a0333f3f8293?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=1f57cc13084e32839627453821a43abf\",\r\n    },\r\n    {\r\n      id: 25,\r\n      name: \"Flowers\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1429091443922-e7d9ae79a837?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=e81cb6a60c53788559edb9bec21b80fc\",\r\n    },\r\n    {\r\n      id: 26,\r\n      name: \"Whale\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1454991727061-be514eae86f7?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=3c55430f01fe9ac9a9ccb3383d1416ff\",\r\n    },\r\n    {\r\n      id: 27,\r\n      name: \"Mountain\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1467890947394-8171244e5410?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=980&h=980&fit=crop&s=9396f0adf263b51b44626228225684d0\",\r\n    },\r\n    {\r\n      id: 28,\r\n      name: \"Fire\",\r\n      image:\r\n        \"https://images.unsplash.com/photo-1468245856972-a0333f3f8293?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=900&h=900&fit=crop&s=1f57cc13084e32839627453821a43abf\",\r\n    },\r\n  ];\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const onClickOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const onClickCloseModal = () => {\r\n    setModalOpen((prev) => !prev);\r\n  };\r\n\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const newArray: any = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ImagesDiv>\r\n        {images.map((item, key) => (\r\n            <Btn onClick={onClickOpenModal}>\r\n              <Image src={item.image} alt={item.name} />\r\n            </Btn>\r\n        ))}\r\n      </ImagesDiv>\r\n\r\n      <button onClick={onClickOpenModal}>모달창 테스트</button>\r\n        {isModalOpen && (\r\n          <Modal closeModal={onClickCloseModal}/>\r\n        )}{\" \"}\r\n    </>\r\n  );\r\n};\r\nexport default Post;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  float: left;\r\n`;\r\nconst ImagesDiv = styled.div`\r\n  margin-top: 20%;\r\n`;\r\nconst Btn = styled.button `\r\n  background-color: transparent !important;\r\n  background-image: none !important;\r\n  border-color: transparent;\r\n  border: none;\r\n  color: #FFFFFF;\r\n  padding: 0px 0px;\r\n  width: 25%;\r\n`","import { dbService, authService } from \"../fbase\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { InputStyle } from \"./styles/style\";\r\nimport { RedButton, WhiteButton } from \"./styles/buttonstyle\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n//import { useTranslation } from \"react-i18next\";\r\n\r\nconst DevTool = ({ userObj }: any) => {\r\n  //const { t, i18n } = useTranslation()\r\n\r\n  const { id } = useParams(); // hetelOwnerId\r\n\r\n  const [goalCount, setGoalCount] = useState(0);\r\n  const [windowCount, setWindowCount] = useState(2);\r\n  const [windowInfoIndex, setWindowInfoIndex] = useState(0);\r\n  //const history = useHistory();\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // if (userObj.uid == \"sksKvNWFPBe5ZmJtNCdbGUh5jYk1\") {\r\n    //   setIsAdmin(true);\r\n    // }\r\n    /*dbService.collection(\"AdminConfig\").doc(\"AdminConfig\").get()\r\n        .then((doc) => {\r\n          setDescription(doc.data().description === \"\" ? \"\" : doc.data().description)\r\n        });*/\r\n  }, []);\r\n\r\n  const onChangeWindowInfoIndex = (event: any) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setWindowInfoIndex(value);\r\n  };\r\n  const onChangeWindowCount = (event: any) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setWindowCount(value);\r\n  };\r\n  const onChange = (event: any) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setGoalCount(value);\r\n  };\r\n\r\n  const onSubmitWindowInfo = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    // dbService.collection(\"hotelOwner\").doc(id).onSnapshot((doc) => {\r\n    //     setWindowInfo(doc.data().windowInfo);\r\n    // });\r\n\r\n    await dbService\r\n      .collection(\"hotelOwner\")\r\n      .doc(id)\r\n      .update({\r\n        [`windowInfo.${windowInfoIndex}`]: true,\r\n        //  windowCount : i,\r\n      });\r\n\r\n    alert(`info index ${windowInfoIndex}개 로 변경`);\r\n    //history.push(\"/hotel/\" + userObj.uid);\r\n  };\r\n  // 창문을 닫아 버리자!\r\n  const onSubmitWindowClose = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    await dbService\r\n      .collection(\"hotelOwner\")\r\n      .doc(id)\r\n      .update({\r\n        [`windowInfo.${windowInfoIndex}`]: false,\r\n        //  windowCount : i,\r\n      });\r\n\r\n    alert(`info index ${windowInfoIndex}개 로 변경`);\r\n    //history.push(\"/hotel/\" + userObj.uid);\r\n  };\r\n\r\n  const onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.collection(\"AdminConfig\").doc(\"AdminConfig\").update({\r\n      goalCount: goalCount,\r\n    });\r\n\r\n    alert(`오늘의 편지 갯수 ${goalCount}개 로 변경`);\r\n    //history.push(\"/hotel/\" + userObj.uid);\r\n  };\r\n  const onSubmitWindowCount = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.collection(\"hotelOwner\").doc(id).update({\r\n      windowCount: windowCount,\r\n    });\r\n\r\n    alert(`windowCount ${windowCount}개 로 변경`);\r\n    //history.push(\"/hotel/\" + userObj.uid);\r\n  };\r\n  const addQuestionList = async (event: any) => {\r\n    event.preventDefault();\r\n    // collection = table\r\n\r\n    await dbService.collection(\"questionList\").add(\r\n      /*{\r\n          question: \"이번 달 가장 맘에 드는 소비템 TOP 3\",\r\n          answer_type: \"rank\",\r\n        }*/\r\n      /*,{\r\n        question: \"내 삶의 이유는 무엇인가요?\",\r\n        answer_type: \"sentence\",\r\n      }\r\n      */\r\n      /*{\r\n        question: \"내 최애 맛집들을 소개해주세요\",\r\n        answer_type: \"word\",\r\n      },*/\r\n      \r\n      {\r\n        question: \"수지님의 2월은 어땠나요?\",\r\n        answer_type: \"score\",\r\n      }\r\n    );\r\n\r\n    alert(`질문 테이블 삽입`);\r\n    //history.push(\"/hotel/\" + userObj.uid);\r\n  };\r\n\r\n  // 기본 로그인 테스트\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password1, setPassword1] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n\r\n  const onChangeEmailAndPassword = (event: any) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password1\") {\r\n      setPassword1(value);\r\n    } else if (name === \"password2\") {\r\n      setPassword2(value);\r\n    }\r\n  };\r\n\r\n  const onSubmitSignUpTest = async (event: any) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      if (password1 == password2) {\r\n        await authService.createUserWithEmailAndPassword(email, password1);\r\n        alert(\"회원가입 성공!\");\r\n      } else if (password1 == \"\" || password2 == \"\") {\r\n        alert(\"비밀번호를 입력해주세요.\");\r\n      } else if (password1 != password2) {\r\n        alert(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n    } catch (error) {\r\n      //alert(error.message);\r\n    }\r\n  };\r\n\r\n  return !isAdmin ? (\r\n    <>\r\n      <Container>\r\n        <div\r\n          style={{ marginTop: \"141px\", fontSize: \"30px\", fontWeight: \"bold\" }}\r\n        >\r\n          관리자페이지\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <form onSubmit={addQuestionList}>\r\n          <RedButton>질문데이터삽입</RedButton>\r\n        </form>\r\n        <br />\r\n        <div\r\n          style={{\r\n            height: \"29px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"500px\",\r\n          }}\r\n        >\r\n          창문 열기\r\n        </div>\r\n        <NicknameInput>\r\n          <InputStylenick\r\n            type=\"text\"\r\n            placeholder=\"일자 입력\"\r\n            onChange={onChangeWindowInfoIndex}\r\n          />\r\n        </NicknameInput>\r\n        <br />\r\n        <form onSubmit={onSubmitWindowInfo}>\r\n          <RedButton>창문 열기</RedButton>\r\n        </form>\r\n\r\n        <br />\r\n        <div\r\n          style={{\r\n            height: \"29px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"500px\",\r\n          }}\r\n        >\r\n          창문 닫기\r\n        </div>\r\n        <NicknameInput>\r\n          <InputStylenick\r\n            type=\"text\"\r\n            placeholder=\"일자 입력\"\r\n            onChange={onChangeWindowInfoIndex}\r\n          />\r\n        </NicknameInput>\r\n        <br />\r\n        <form onSubmit={onSubmitWindowClose}>\r\n          <RedButton>창문 닫기</RedButton>\r\n        </form>\r\n        <div\r\n          style={{\r\n            height: \"29px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"500px\",\r\n          }}\r\n        >\r\n          오늘의 편지 최대 갯수\r\n        </div>\r\n        <HotelGuide>사용자가 받을 수 있는 최대 편지 수</HotelGuide>\r\n\r\n        <NicknameInput>\r\n          <InputStylenick\r\n            type=\"text\"\r\n            placeholder=\"숫자 입력\"\r\n            onChange={onChange}\r\n          />\r\n        </NicknameInput>\r\n        <br />\r\n        <form onSubmit={onSubmit}>\r\n          <RedButton>편지 갯수 변경</RedButton>\r\n        </form>\r\n        <br />\r\n        <br />\r\n        <div\r\n          style={{\r\n            height: \"29px\",\r\n            fontSize: \"20px\",\r\n            fontWeight: \"500px\",\r\n          }}\r\n        >\r\n          X일차 창문 컨트롤\r\n        </div>\r\n        <HotelGuide>\r\n          사용자가 오류로 인해, 날짜가 하루 지나도 다음 창문으로 카운팅\r\n          되지않을때 사용\r\n        </HotelGuide>\r\n        <HotelGuide>\r\n          사용법: url에 AdventCalendar#/adminConfig/(ID) 를 삽입\r\n        </HotelGuide>\r\n        <HotelGuide>\r\n          예시: 1일차에 10개를 쌓았으나, 2일차에도 10개에 계속 이어간다면,\r\n          숫자를 2를 주면 2번째 창문으로 넘어감.\r\n        </HotelGuide>\r\n        <NicknameInput>\r\n          <InputStylenick\r\n            type=\"text\"\r\n            placeholder=\"일자 입력\"\r\n            onChange={onChangeWindowCount}\r\n          />\r\n        </NicknameInput>\r\n        <br />\r\n        <form onSubmit={onSubmitWindowCount}>\r\n          <RedButton>창문 일자 변경</RedButton>\r\n        </form>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <form onSubmit={onSubmitSignUpTest}>\r\n            <h1 style={{ fontFamily: \"humanbeomseok\", fontSize: \"25px\" }}>\r\n              회원가입 테스트\r\n            </h1>\r\n            <InputLayout2>\r\n              <InputStyle\r\n                placeholder=\"이메일\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                required\r\n                value={email}\r\n                onChange={onChangeEmailAndPassword}\r\n              />\r\n              <InputStyle\r\n                placeholder=\"비밀번호\"\r\n                name=\"password1\"\r\n                type=\"password\"\r\n                required\r\n                value={password1}\r\n                onChange={onChangeEmailAndPassword}\r\n              />\r\n              <InputStyle\r\n                placeholder=\"비밀번호 확인\"\r\n                name=\"password2\"\r\n                type=\"password\"\r\n                required\r\n                value={password2}\r\n                onChange={onChangeEmailAndPassword}\r\n              />\r\n            </InputLayout2>\r\n            <ButtonLayout>\r\n              <RedButton type=\"submit\">회원가입 테스트</RedButton>\r\n            </ButtonLayout>\r\n          </form>\r\n        </Container>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <WhiteButton\r\n          onClick={() => {\r\n            //history.push(\"/\");\r\n          }}\r\n        >\r\n          시작화면\r\n        </WhiteButton>\r\n      </Container>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <Container>\r\n        <HotelGuide\r\n          style={{\r\n            marginTop: \"250px\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"humanbeomseok\",\r\n          }}\r\n        >\r\n          저희 서비스를 사용해주셔서 감사합니다.\r\n        </HotelGuide>\r\n        <HotelGuide\r\n          style={{\r\n            marginTop: \"30px\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"humanbeomseok\",\r\n          }}\r\n        >\r\n          아쉽게 이 주소는 회원님이 접근할 수 없는 주소입니다.\r\n        </HotelGuide>\r\n        <HotelGuide\r\n          style={{\r\n            marginTop: \"30px\",\r\n            fontSize: \"30px\",\r\n            fontFamily: \"humanbeomseok\",\r\n          }}\r\n        >\r\n          아직 호텔이 없으시다면 호텔을 만들어서 서비스를 이용해보세요!\r\n        </HotelGuide>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DevTool;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\nconst NicknameInput = styled.form`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-items: center;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  margin-top: 22.84px;\r\n  margin-bottom: 20px;\r\n`;\r\nconst TxtAreaDesc = styled.textarea`\r\n  width: 230px;\r\n  min-height: 93px;\r\n  background-color: #f5f5f5;\r\n  color: #000000;\r\n\r\n  border-color: transparent;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #bab8b5;\r\n  padding-left: 10px;\r\n  text-align: center;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n  font-family: none;\r\n  resize: none;\r\n  white-space: pre-wrap;\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 33px;\r\n    text-align: center;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst InputStylenick = styled.input`\r\n  width: 115px;\r\n  height: 25px;\r\n  background-color: #f5f5f5;\r\n  color: #000000;\r\n\r\n  border-color: transparent;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #bab8b5;\r\n  padding-left: 10px;\r\n  text-align: center;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 25px;\r\n\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 18px;\r\n    line-height: 33px;\r\n    text-align: center;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst HotelGuide = styled.div`\r\n  text-align: center;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst InputLayout2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 9px;\r\n  margin-top: 72px;\r\n  margin-bottom: 39px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12.57px;\r\n  margin-top: 62.02px;\r\n  margin-bottom: 142px;\r\n  align-items: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport PostByStart from \"../assets/PostByStart.svg\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst Loading = () => {\r\n  const history = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history(\"/result\");\r\n    }, 2000);\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>\r\n        고영희 집배원이 <br />\r\n        <b>편지</b>를 배달중입니다 💌\r\n      </Text>\r\n      <Img src={PostByStart} />\r\n\r\n      <Sub>편지가 거의 도착했어요!</Sub>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Img = styled.img`\r\n  width: 180px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-size: 20px;\r\n  text-align: center;\r\n  line-height: 28px;\r\n  margin-top: -30px;\r\n\r\n  b {\r\n    color: #ff89a9;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Sub = styled.div`\r\n  font-size: 16px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport default Loading;\r\n","export default __webpack_public_path__ + \"static/media/Profile.bd8b1750.svg\";","export default __webpack_public_path__ + \"static/media/Back.a8a86bbd.svg\";","export default __webpack_public_path__ + \"static/media/Line.20493c05.svg\";","export default __webpack_public_path__ + \"static/media/AnswerImg.41977375.svg\";","export default __webpack_public_path__ + \"static/media/TImg.e1276e9a.svg\";","export default __webpack_public_path__ + \"static/media/ShareIcon.5737d5ea.svg\";","export default __webpack_public_path__ + \"static/media/Home.509dced7.svg\";","export default __webpack_public_path__ + \"static/media/Action.e4e8e83c.svg\";","import styled from \"styled-components\";\r\nimport ProfileImg from \"../assets/Profile.svg\";\r\nimport PinkHeart from \"../assets/PinkHeart.svg\";\r\nimport BlackHeart from \"../assets/BlackHeart.svg\";\r\nimport back from \"../assets/Back.svg\";\r\nimport Line from \"../assets/Line.svg\";\r\nimport AnswerImg from \"../assets/AnswerImg.svg\";\r\nimport rankImg1 from \"../assets/Rank1.svg\";\r\nimport rankImg2 from \"../assets/Rank2.svg\";\r\nimport rankImg3 from \"../assets/Rank3.svg\";\r\nimport ChipImg from \"../assets/Chip.svg\";\r\nimport TImg from \"../assets/TImg.svg\";\r\nimport ShareIcon from \"../assets/ShareIcon.svg\";\r\nimport HomeIcon from \"../assets/Home.svg\";\r\nimport Share2Icon from \"../assets/Action.svg\";\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <img src={HomeIcon} />\r\n        <img src={Share2Icon} />\r\n      </Header>\r\n      <Wrapper>\r\n        <Profile>\r\n          <Img src={ProfileImg} />\r\n          <Text>홍길동의 2월 회고록</Text>\r\n          <Sub>만족스러운 한 달 이에요!</Sub>\r\n\r\n          <HeartWrapper>\r\n            <HeartImg src={PinkHeart}></HeartImg>\r\n            <HeartImg src={PinkHeart}></HeartImg>\r\n            <HeartImg src={PinkHeart}></HeartImg>\r\n            <HeartImg src={PinkHeart}></HeartImg>\r\n            <HeartImg src={BlackHeart}></HeartImg>\r\n          </HeartWrapper>\r\n        </Profile>\r\n        <ContentWrapper>\r\n          <Question>가장 생각나는 문장</Question>\r\n          <Answer>“ 괜찮아. 두 배로 여행하면 돼. - 쉬운 천국“</Answer>\r\n\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>나에게 영향을 준 세명</Question>\r\n          <Answer>\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n          </Answer>\r\n\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>가장 많이 연락한 사람</Question>\r\n          <Answer>\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n          </Answer>\r\n\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>이번달 소비취향</Question>\r\n          <AnswerRankWrapper>\r\n            <RankWrapper className=\"rank2\">\r\n              <Ranking>사건의 지평성</Ranking>\r\n              <RankImg src={rankImg2}></RankImg>\r\n            </RankWrapper>\r\n\r\n            <RankWrapper>\r\n              <Ranking>사건의 지평성</Ranking>\r\n              <RankImg src={rankImg1}></RankImg>\r\n            </RankWrapper>\r\n\r\n            <RankWrapper className=\"rank3\">\r\n              <Ranking>사건의 지평성</Ranking>\r\n              <RankImg src={rankImg3} className=\"rank3\"></RankImg>\r\n            </RankWrapper>\r\n          </AnswerRankWrapper>\r\n\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>이번달 소비취향</Question>\r\n          <Answer>\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={AnswerImg} />\r\n              <span>이무개씨</span>\r\n            </AnswerWrapper>\r\n          </Answer>\r\n\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>다음달 목표 키워드</Question>\r\n          <Answer>\r\n            <ChipWrapper>\r\n              <img src={ChipImg} /> &nbsp;\r\n              <img src={ChipImg} /> &nbsp;\r\n              <img src={ChipImg} />\r\n            </ChipWrapper>\r\n          </Answer>\r\n          <LineImg src={Line}></LineImg>\r\n\r\n          <Question>나에게 영향을 준 세명</Question>\r\n          <Answer>\r\n            <AnswerWrapper>\r\n              <img src={TImg} />\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={TImg} />\r\n            </AnswerWrapper>\r\n            &nbsp;\r\n            <AnswerWrapper>\r\n              <img src={TImg} />\r\n            </AnswerWrapper>\r\n          </Answer>\r\n        </ContentWrapper>\r\n        <ShareText> 내 회고록 공유하기</ShareText>\r\n        <ShareIconImg src={ShareIcon} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-cotents: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 80px;\r\n`;\r\n\r\nconst Text = styled.div`\r\n  font-size: 24px;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  justify-cotents: center;\r\n  align-items: center;\r\n  padding: 30px;\r\n`;\r\n\r\nconst Sub = styled.div`\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst HeartImg = styled.img`\r\n  width: 30px;\r\n`;\r\n\r\nconst HeartWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  width: 100%;\r\n  height: 1500px;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-size: contain;\r\n  background-image: url(${back});\r\n  padding: 20px 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  align-items: center;\r\n`;\r\n\r\nconst Question = styled.div`\r\n  font-size: 20px;\r\n  margin-top: 30px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Answer = styled.div`\r\n  display: flex;\r\n  font-size: 15px;\r\n  color: #494545;\r\n  margin-top: 15px;\r\n\r\n  img {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst LineImg = styled.img`\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst AnswerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst AnswerRankWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 70px;\r\n  justify-content: center;\r\n  min-height: 200px;\r\n`;\r\n\r\nconst RankImg = styled.img`\r\n  width: 100px;\r\n`;\r\n\r\nconst RankWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  &.rank2 {\r\n    margin-top: 60px;\r\n  }\r\n\r\n  &.rank3 {\r\n    margin-top: 75px;\r\n  }\r\n`;\r\n\r\nconst ChipWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Ranking = styled.div``;\r\n\r\nconst ShareText = styled.div`\r\n  margin-top: 50px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ShareIconImg = styled.img`\r\n  width: 50px;\r\n  margin-top: 20px;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 30px 15px;\r\n`;\r\n\r\nexport default Result;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authService } from \"../fbase\";\r\nimport { GlobalStyle, MediaDiv } from \"../styles/layout\";\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Write from \"../routes/Write\";\r\nimport WriteSuccess from \"../routes/WriteSuccess\";\r\nimport Navigation from \"./Navigation\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Signup from \"../routes/Signup\";\r\nimport Start from \"../routes/Start\";\r\nimport Question from \"../routes/Question\";\r\nimport Post from \"src/routes/Post\";\r\nimport DevTool from \"src/routes/DevTool\";\r\nimport Loading from \"src/routes/Loading\";\r\nimport Result from \"src/routes/Result\";\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj]: any = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        setIsLoggedIn(user);\r\n        setUserObj(user);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MediaDiv>\r\n        <Router>\r\n          <Routes>\r\n            {/* {isLoggedIn && <Navigation />} */}\r\n            isLoggedIn ? (\r\n            <Route path=\"/home\" element={<Home userObj={userObj} />} />\r\n            <Route path=\"/write\" element={<Write userObj={userObj} />} />\r\n            <Route path=\"/writesuccess\" element={<WriteSuccess />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route\r\n              path=\"/question/:id\"\r\n              element={<Question userObj={userObj} />}\r\n            ></Route>\r\n            <Route path=\"/post\" element={<Post />}></Route>\r\n            <Route\r\n              path=\"/devtool\"\r\n              element={<DevTool userObj={userObj} />}\r\n            ></Route>\r\n            <Route path=\"/loading\" element={<Loading />}></Route>\r\n            <Route path=\"/result\" element={<Result />}></Route>\r\n            ) : (\r\n            <Route path=\"/\" element={<Start />} />\r\n            <Route path=\"/login\" element={<Auth />} />\r\n            <Route path=\"/signup\" element={<Signup />} />)\r\n          </Routes>\r\n        </Router>\r\n\r\n        {/* {init ? (\r\n          <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\r\n        ) : (\r\n          \"init..\"\r\n        )} */}\r\n      </MediaDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}