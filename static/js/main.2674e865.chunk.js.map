{"version":3,"sources":["fbase.ts","styles/layout.ts","components/Nweet.tsx","routes/styles/style.ts","routes/styles/buttonstyle.ts","components/Modal/styles.ts","components/Modal/Modal.tsx","assets/Post.svg","routes/Home.tsx","routes/Profile.tsx","routes/Write.tsx","assets/Letter.svg","routes/WriteSuccess.tsx","assets/Google.svg","assets/Github.svg","routes/Auth.tsx","routes/Signup.tsx","assets/PostByStart.svg","routes/Start.tsx","assets/Background.svg","components/Button.tsx","assets/AnswerBack.svg","components/AnswerSentence.tsx","routes/Question.tsx","components/App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","MediaDiv","styled","div","GlobalStyle","createGlobalStyle","reset","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","update","onChange","value","target","required","type","onClick","src","width","height","Container","TitleDiv","InputStyle","input","WriteTitleDiv","LetterStyle","img","WriteSubTitle","RedButton","button","WhiteButton","ModalLayout","Background","MessageCard","CardLayout","TimeTitle","todayTime","now","Date","getFullYear","getMonth","getDate","slice","Modal","closeModal","children","outside","useRef","e","current","TimeTitleLayout","Home","userObj","nweets","setNweets","isModalOpen","setModalOpen","useEffect","collection","onSnapshot","snapshot","newArray","docs","map","document","data","history","useNavigate","PostImg","Post","nweet","creatorId","uid","Profile","signOut","Write","setNweet","attachment","setAttachment","setValue","ref","style","scrollHeight","attRef","child","uuidv4","putString","response","getDownloadURL","add","createdAt","LetterDiv","Textarea","v","placeholder","maxLength","Input","disabled","FileInput","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","textarea","WriteSuccess","Letter","WriteSuccessTitle","ButtonLayout","Auth","navi","onSocialClick","alt","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","ButtonStyle","Google","Github","Signup","InputLayout2","Start","HotelImg","PostByStart","ButtonWrapper","Button","label","AnswerSentenceWrapper","AnswerImg","SentenceInput","AnswerSentence","answerImg","Question","BackgroundImg","LetterImg","letter","QuestionTitle","back","App","setIsLoggedIn","setInit","setUserObj","onAuthStateChanged","user","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2674e865.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBjZ8d4NItswRgO4ch-i12OwvQ6LNZTWk\",\r\n  authDomain: \"retrospectpost.firebaseapp.com\",\r\n  projectId: \"retrospectpost\",\r\n  storageBucket: \"retrospectpost.appspot.com\",\r\n  messagingSenderId: \"115115406569\",\r\n  appId: \"1:115115406569:web:ec44d5e78ba68e6a896c78\",\r\n  measurementId: \"G-2M9Q1G3YL2\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import styled, { createGlobalStyle } from 'styled-components';\r\nimport reset from \"styled-reset\"\r\n\r\nexport const MediaDiv = styled.div`\r\n    margin: 0px auto;\r\n    min-height: calc(var(--vh, 1vh) * 100);\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    background-color: #FCF4E9;\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'KyoboHand';\r\n        src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@1.0/KyoboHand.woff') format('woff');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n    ${reset}\r\n    body {\r\n        box-sizing: border-box;\r\n        margin: 0px;\r\n        font-family: 'KyoboHand';\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'KyoboHand';\r\n    }\r\n`;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }: any) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text); // for editing state\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event: any) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const TitleDiv = styled.div`\r\n  width: 176px;\r\n  height: 17px;\r\n  text-align: center;\r\n  padding-top: 3px;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n\r\n  color: #222;\r\n`;\r\nexport const InputStyle = styled.input`\r\n  width: 305px;\r\n  height: 45px;\r\n  background-color: #fcf4e9;\r\n  color: #222;\r\n\r\n  border-color: transparent;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n  border-bottom-color: #bab8b5;\r\n  padding-left: 10px;\r\n\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 25px;\r\n\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 25px;\r\n  }\r\n`;\r\n// write.js\r\nexport const WriteTitleDiv = styled.div`\r\n  width: 159px;\r\n  height: 58px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 29px;\r\n  text-align: center;\r\n\r\n  color: #222;\r\n`;\r\nexport const LetterStyle = styled.img`\r\n    width: 70px;\r\n    height: 43.47px;\r\n    margin-bottom: 22.53px;\r\n`\r\nexport const WriteSubTitle = styled.div`\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 17px;\r\n    \r\n    color: #686363;\r\n`\r\n// common\r\n\r\nexport const ButtonLayout = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12.57px;\r\n    margin-top: 62.02px;\r\n    margin-bottom: 142px;\r\n`","import styled from \"styled-components\"\r\n\r\nexport const RedButton = styled.button`\r\n    width: 281px;\r\n    height: 29px;\r\n    border-width: 1.5px;\r\n    border-style: dashed;\r\n    border-color: white;\r\n    border-radius: 1px;\r\n    background-color: #AF2010;\r\n    outline-width: 9px;\r\n    outline-color:  #AF2010;\r\n    outline-style: solid;\r\n\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: white;\r\n    \r\n    margin-top: 9px;\r\n    margin-bottom: 9px;\r\n    :disabled {\r\n        background-color: rgba(175, 32, 16, 0.5);\r\n        outline-color:  rgba(175, 32, 16, 0.5);\r\n    }\r\n\r\n`\r\n\r\nexport const WhiteButton = styled.button`\r\n    width: 281px;\r\n    height: 29px;\r\n\r\n    box-shadow:  0 0 0 10px #AF2010;\r\n\r\n    border: 1.5px dashed #AF2010;\r\n    outline:  solid white;\r\n    box-shadow: 0 0 0 8px white, 0 0 0 9px #AF2010;\r\n\r\n    border-radius: 2px;\r\n    background-color: white; \r\n\r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    color: #AF2010;\r\n    \r\n    margin-top: 9px;\r\n    margin-bottom: 9px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const ModalLayout = styled.div`\r\n  z-index: 999;\r\n  position: fixed;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  /* max-height: 50%; */\r\n  width: 279px;\r\n  height: 435px;\r\n  background: white;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  box-sizing: border-box;\r\n  border: 3px solid #a4d6cb;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  line-height: 22px;\r\n\r\n  h1 {\r\n    margin-top: 30px;\r\n    margin-bottom: 28px;\r\n    font-weight: 700;\r\n    font-size: 20px;\r\n    line-height: 29px;\r\n  }\r\n`;\r\n\r\nexport const ModalCloseButton = styled.div`\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  width: 1.2rem;\r\n  height: 1.2rem;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 1.2rem;\r\n  &:active {\r\n    background-color: white;\r\n    filter: brightness(80%);\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1;\r\n`;\r\n\r\nexport const MessageCard = styled.div`\r\n  position: relative;\r\n\r\n  height: fit-content;\r\n  padding: 10px;\r\n\r\n  width: 217px;\r\n\r\n  box-sizing: border-box;\r\n\r\n  border: 2px dashed #a4d6cb;\r\n  border-radius: 3px;\r\n  box-shadow: 0 0 0 8px white, 0 0 0 10px #a4d6cb;\r\n`;\r\n\r\nexport const CardLayout = styled.div`\r\n  position: relative;\r\n  overflow: scroll;\r\n  align-items: center;\r\n\r\n  width: 272px;\r\n  height: fit-content;\r\n  padding-top: 10px;\r\n  padding-bottom: 35px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n`;\r\n","import React from \"react\";\r\nimport { ModalLayout, Background, ModalCloseButton } from \"./styles\";\r\nimport { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimeTitle = () => {\r\n  const todayTime = () => {\r\n    let now = new Date();\r\n    let todayYear = now.getFullYear();\r\n    let todayMonth = now.getMonth() + 1;\r\n    let todayDate = now.getDate();\r\n\r\n    return todayYear + \".\" + todayMonth + \".\" + todayDate;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {todayTime().slice(0, 9)}\r\n      <span>{todayTime().slice(9, 12)}</span>\r\n      <span>{todayTime().slice(12, 19)}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = ({ closeModal, children }: any) => {\r\n  const outside = useRef();\r\n  return (\r\n    <Background\r\n      //   ref={outside}\r\n      onClick={(e) => {\r\n        if (e.target == outside.current) {\r\n          closeModal(false);\r\n        }\r\n      }}\r\n    >\r\n      <ModalLayout>\r\n        <TimeTitleLayout>\r\n          <TimeTitle />\r\n        </TimeTitleLayout>\r\n        {/* <ModalCloseButton onClick={() => closeModal(false)} /> */}\r\n        {children}\r\n        {/* <ModalButton onClick={() => closeModal(true)}>{buttonText}</ModalButton> */}{\" \"}\r\n      </ModalLayout>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n\r\nconst TimeTitleLayout = styled.div`\r\n  position: absolute;\r\n  left: 225px;\r\n  top: 3px;\r\n  font-size: 12px;\r\n  line-height: 17px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Post.f6f1fc94.svg\";","import Nweet from \"../components/Nweet\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, TitleDiv, ButtonLayout } from \"./styles/style\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport { CardLayout, MessageCard } from \"../components/Modal/styles\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Post from \"../assets/Post.svg\";\r\nimport { dbService } from \"../fbase\";\r\nimport React from \"react\";\r\n\r\nconst Home = ({ userObj }: any) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const newArray: any = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  const history = useNavigate();\r\n  const toWrite = () => {\r\n    history(\"/question\");\r\n  };\r\n\r\n  const onClickOpenModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const onClickCloseModal = () => {\r\n    setModalOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleDiv>회고1</TitleDiv>\r\n        <PostImg src={Post} />\r\n        <RedButton onClick={toWrite}>회고 보내기</RedButton>\r\n        <button onClick={onClickOpenModal}>모달창 테스트</button>\r\n        {isModalOpen && (\r\n          <Modal closeModal={onClickCloseModal}>\r\n            <h1>도착한 회고</h1>\r\n            <CardLayout>\r\n              {\" \"}\r\n              {nweets.map((nweet: any) => (\r\n                <MessageCard>\r\n                  <Nweet\r\n                    key={nweet.id}\r\n                    nweetObj={nweet}\r\n                    isOwner={nweet.creatorId === userObj.uid}\r\n                  />\r\n                </MessageCard>\r\n              ))}{\" \"}\r\n            </CardLayout>\r\n          </Modal>\r\n        )}{\" \"}\r\n      </Container>\r\n      {/* <div>\r\n              {\r\n              nweets.map((nweet) => (\r\n                  <Nweet \r\n                  key={nweet.id} \r\n                  nweetObj={nweet}\r\n                  isOwner={nweet.creatorId === userObj.uid}\r\n                  />\r\n              ))}\r\n        </div> */}{\" \"}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst PostImg = styled.img`\r\n  width: 180px;\r\n  height: 285px;\r\n  margin-top: 36px;\r\n`;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst Profile = () => {\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history(\"/\");\r\n  };\r\n  const history = useNavigate();\r\n  return (\r\n    <>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Container,\r\n  WriteTitleDiv,\r\n  ButtonLayout,\r\n  LetterStyle,\r\n} from \"./styles/style\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport Letter from \"../assets/Letter.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\n\r\nconst Write = ({ userObj }: any) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [nweets, setNweets] = useState([]);\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const ref: any = useRef();\r\n\r\n  useEffect(() => {\r\n    // textarea scroll height 설정\r\n    ref.current.style.height = \"0px\";\r\n    const scrollHeight = ref.current.scrollHeight;\r\n    ref.current.style.height = scrollHeight + \"px\";\r\n  }, [value]);\r\n\r\n  const onSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      // file\r\n      const attRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    // text by db\r\n    await dbService.collection(\"nweets\").add({\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    });\r\n\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event: any) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n\r\n    const v = event.target.value;\r\n    setValue(v);\r\n  };\r\n\r\n  const onFileChange = (event: any) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      }: any = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  // const buttonDisabled = nweet && Input;\r\n\r\n  const history = useNavigate();\r\n  const onClickSuccessWrite = () => {\r\n    history(\"/writesuccess\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <LetterDiv>📩</LetterDiv>\r\n        <br />\r\n        <WriteTitleDiv>\r\n          회고록\r\n          <br />\r\n          문서 작성\r\n        </WriteTitleDiv>\r\n        <Textarea\r\n          ref={ref}\r\n          value={nweet}\r\n          onChange={onChange}\r\n          placeholder=\"회고록 작성!\"\r\n          maxLength={1000}\r\n        />\r\n        <Input type=\"text\" placeholder=\"닉네임을 입력하세요 (10자 이하)\" />\r\n        <form onSubmit={onSubmit}>\r\n          <RedButton\r\n            type=\"submit\"\r\n            disabled={true}\r\n            onClick={onClickSuccessWrite}\r\n            value=\"Nw\"\r\n          >\r\n            보내기\r\n          </RedButton>\r\n        </form>\r\n        <FileInput type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n        {attachment && (\r\n          <div>\r\n            <img src={attachment} width=\"50px\" height=\"50px\" />\r\n            <button onClick={onClearAttachment}>Clear</button>\r\n          </div>\r\n        )}{\" \"}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Write;\r\n\r\nconst Textarea = styled.textarea`\r\n  overflow: hidden;\r\n\r\n  box-sizing: border-box;\r\n  min-height: 183px;\r\n  width: 293px;\r\n  margin-top: 33px;\r\n  padding-top: 25px;\r\n\r\n  background: #ffffff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 7px;\r\n\r\n  text-align: center;\r\n  font-size: 13px;\r\n  line-height: 19px;\r\n\r\n  :focus::placeholder {\r\n    color: transparent;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: #bab8b5;\r\n    font-size: 13px;\r\n    line-height: 19px;\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  box-sizing: border-box;\r\n\r\n  width: 293px;\r\n  height: 39px;\r\n\r\n  background: #ffffff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 7px;\r\n  margin: 20px;\r\n\r\n  text-align: center;\r\n  font-size: 13px;\r\n  line-height: 19px;\r\n\r\n  :focus::placeholder {\r\n    color: transparent;\r\n  }\r\n\r\n  ::placeholder {\r\n    font-size: 13px;\r\n    line-height: 19px;\r\n    color: #bab8b5;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst LetterDiv = styled.div`\r\n  font-size: 50px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Letter.ea260cf9.svg\";","import { LetterStyle, WriteSubTitle } from \"./styles/style\";\r\nimport Letter from \"../assets/Letter.svg\";\r\nimport styled from \"styled-components\";\r\nimport { RedButton, WhiteButton } from \"./styles/buttonstyle\";\r\nimport React from \"react\";\r\n\r\nconst WriteSuccess = () => {\r\n  return (\r\n    <Container>\r\n      <LetterStyle src={Letter} />\r\n      <WriteSuccessTitle>편지를 보냈어요!</WriteSuccessTitle>\r\n      <WriteSubTitle>아직 내 호텔이 없나요?</WriteSubTitle>\r\n      <WriteSubTitle>내 호텔을 만들면</WriteSubTitle>\r\n      <WriteSubTitle>친구에게 편지를 받을 수 있어요.</WriteSubTitle>\r\n      <ButtonLayout>\r\n        <RedButton>내 호텔 만들기</RedButton>\r\n        <WhiteButton>로그인</WhiteButton>\r\n      </ButtonLayout>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WriteSuccess;\r\n\r\nconst WriteSuccessTitle = styled.div`\r\n  text-align: center;\r\n  width: 141px;\r\n  height: 29px;\r\n`;\r\nconst ButtonLayout = styled.div`\r\n  text-align: center;\r\n  margin-top: 64px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-top: 224px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Google.53546abe.svg\";","export default __webpack_public_path__ + \"static/media/Github.426ae318.svg\";","import Google from \"../assets/Google.svg\";\r\nimport Github from \"../assets/Github.svg\";\r\nimport { Container } from \"./styles/style\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { firebaseInstance, authService } from \"../fbase\";\r\nconst Auth = () => {\r\n  const navi = useNavigate();\r\n\r\n  const onSocialClick = async (event: any) => {\r\n    const {\r\n      target: { alt },\r\n    } = event;\r\n    let provider: any;\r\n    if (alt === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (alt === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n\r\n    const data = await authService.signInWithPopup(provider);\r\n\r\n    navi(\"/home\");\r\n    //console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonStyle>\r\n        <img src={Google} onClick={onSocialClick} alt=\"google\"/>\r\n        <img src={Github} onClick={onSocialClick} alt=\"github\"/>\r\n\r\n      </ButtonStyle>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n\r\nconst ButtonStyle = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n`;\r\n","import { Container, InputStyle, TitleDiv } from \"./styles/style\";\r\nimport styled from \"styled-components\";\r\nimport { RedButton } from \"./styles/buttonstyle\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst Signup = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleDiv>회고 우체국</TitleDiv>\r\n        <InputLayout2>\r\n          <InputStyle placeholder=\"닉네임\" />\r\n          <InputStyle placeholder=\"아이디\" />\r\n          <InputStyle placeholder=\"비밀번호\" />\r\n          <InputStyle placeholder=\"비밀번호 확인\" />\r\n        </InputLayout2>\r\n        <RedButton disabled={true} type=\"submit\">\r\n          내 호텔 만들기\r\n        </RedButton>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\nconst InputLayout2 = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 9px;\r\n  margin-top: 72px;\r\n  margin-bottom: 39px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/PostByStart.6d98dbfb.svg\";","import styled from \"styled-components\";\r\nimport PostByStart from \"../assets/PostByStart.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, TitleDiv } from \"./styles/style\";\r\nimport Auth from \"./Auth\";\r\nimport React from \"react\";\r\n\r\nconst Start = () => {\r\n  const history = useNavigate();\r\n\r\n  const onclickPath = () => {\r\n    history(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TitleDiv>나의 회고록</TitleDiv>\r\n        <TitleDiv>HeyGo</TitleDiv>\r\n        <TitleDiv>고양이 우체통</TitleDiv>\r\n        <HotelImg src={PostByStart} />\r\n        <Auth />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n\r\nconst ButtonLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12.57px;\r\n  margin-top: 62.02px;\r\n  margin-bottom: 142px;\r\n`;\r\nconst HotelImg = styled.img`\r\n  width: 180px;\r\n  height: 285px;\r\n  margin-top: 36px;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/Background.429d4e5f.svg\";","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nconst Button = ({ label }: any) => {\r\n  return <ButtonWrapper>{label}</ButtonWrapper>;\r\n};\r\n\r\nconst ButtonWrapper = styled.div`\r\n  border-radius: 40px;\r\n  background-color: #222;\r\n  padding: 12px;\r\n  color: #fff;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/AnswerBack.1cb44df9.svg\";","import styled from \"styled-components\";\r\nimport answerImg from \"../assets/AnswerBack.svg\";\r\n\r\nconst AnswerSentence = () => {\r\n  return (\r\n    <AnswerSentenceWrapper>\r\n      <AnswerImg src={answerImg}></AnswerImg>\r\n      <SentenceInput placeholder=\"답변을 입력해주세요\"></SentenceInput>\r\n    </AnswerSentenceWrapper>\r\n  );\r\n};\r\n\r\nconst AnswerSentenceWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 70px;\r\n`;\r\n\r\nconst AnswerImg = styled.img`\r\n  width: 290px;\r\n`;\r\n\r\nconst SentenceInput = styled.textarea`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  padding: 30px;\r\n  background: none;\r\n  border: none;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default AnswerSentence;\r\n","import styled from \"styled-components\";\r\nimport back from \"../assets/Background.svg\";\r\nimport letter from \"../assets/Letter.svg\";\r\nimport Button from \"src/components/Button\";\r\nimport AnswerSelect from \"src/components/AnswerSelect\";\r\nimport AnswerRank from \"src/components/AnswerRank\";\r\nimport AnswerSentence from \"src/components/AnswerSentence\";\r\n\r\nconst Question = () => {\r\n  return (\r\n    <>\r\n      <BackgroundImg>\r\n        <div>\r\n          <LetterImg src={letter}></LetterImg>\r\n          <QuestionTitle>질문 내용을 입력해주세요.</QuestionTitle>\r\n          {/* <AnswerSelect></AnswerSelect>\r\n          <AnswerRank></AnswerRank> */}\r\n          <AnswerSentence></AnswerSentence>\r\n        </div>\r\n        <Button label={\"다음\"}></Button>\r\n      </BackgroundImg>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n\r\nconst LetterImg = styled.img`\r\n  width: 60px;\r\n`;\r\n\r\nconst BackgroundImg = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-image: url(${back});\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 0px 50px;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuestionTitle = styled.div`\r\n  font-size: 30px;\r\n  text-align: center;\r\n  margin-top: 8px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { authService } from \"../fbase\";\r\nimport { GlobalStyle, MediaDiv } from \"../styles/layout\";\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Write from \"../routes/Write\";\r\nimport WriteSuccess from \"../routes/WriteSuccess\";\r\nimport Navigation from \"./Navigation\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Signup from \"../routes/Signup\";\r\nimport Start from \"../routes/Start\";\r\nimport Question from \"../routes/Question\";\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj]: any = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        setIsLoggedIn(user);\r\n        setUserObj(user);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MediaDiv>\r\n        <Router>\r\n          <Routes>\r\n            {/* {isLoggedIn && <Navigation />} */}\r\n            isLoggedIn ? (\r\n            <Route path=\"/home\" element={<Home userObj={userObj} />} />\r\n            <Route path=\"/write\" element={<Write userObj={userObj} />} />\r\n            <Route path=\"/writesuccess\" element={<WriteSuccess />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route path=\"/question\" element={<Question />}></Route>\r\n            ) : (\r\n            <Route path=\"/\" element={<Start />} />\r\n            <Route path=\"/login\" element={<Auth />} />\r\n            <Route path=\"/signup\" element={<Signup />} />)\r\n          </Routes>\r\n        </Router>\r\n\r\n        {/* {init ? (\r\n          <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\r\n        ) : (\r\n          \"init..\"\r\n        )} */}\r\n      </MediaDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}